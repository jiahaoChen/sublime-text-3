{
	"folder_history":
	[
		"/home/jiahao/tmp/log",
		"/home/jiahao/Git/gst-plugins-good",
		"/home/jiahao/nfs/JSON",
		"/home/jiahao/Git/msrgst/mpegtsdemux",
		"/home/jiahao/Git/curl",
		"/var",
		"/usr",
		"/tmp",
		"/sys",
		"/srv",
		"/sbin",
		"/run",
		"/root",
		"/proc",
		"/opt",
		"/mnt",
		"/media",
		"/lost+found",
		"/lib64",
		"/lib",
		"/home",
		"/etc",
		"/dev",
		"/cdrom",
		"/boot",
		"/bin",
		"/home/jiahao/tmp/log/log_20150730",
		"/home/jiahao/nfs/sh",
		"/home/jiahao/tmp/log/log_20150709",
		"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON",
		"/home/jiahao/nfs",
		"/home/jiahao/Downloads/log",
		"/home/jiahao/nfs/log",
		"/home/jiahao/nfs/BugFile",
		"/home/jiahao/nfs/BugFile/tmp",
		"/home/jiahao/Downloads/hubot-master",
		"/home/jiahao/Git/protobuf2json-c",
		"/home/jiahao/Downloads/log_22",
		"/home/jiahao/Git/arec_ct/media_engine",
		"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/tester",
		"/home/jiahao/Downloads/easysqlite-master",
		"/home/jiahao/Downloads/B964-3376",
		"/home/jiahao/Git/buildroot/output/host/usr/arm-buildroot-linux-gnueabi/sysroot/usr/include/protobuf-c",
		"/home/jiahao/Git/rapidjson",
		"/home/jiahao/TestCode/GLib",
		"/home/jiahao/Git/msros/modules/msr13/libsrc/cpulimit",
		"/media/jiahao/8475-CFBA/log_20150304170101",
		"/home/jiahao/Downloads/log_20150302180228",
		"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/tool",
		"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/testbed",
		"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/demux",
		"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/debug",
		"/home/jiahao/Git/msros/scripts",
		"/home/jiahao/Git/msros",
		"/opt/red5",
		"/home/jiahao/nfs/DynamicRecordMp4",
		"/home/jiahao/Downloads/Problems",
		"/home/jiahao/nfs/01161600_log",
		"/home/jiahao/Pictures/Vehicles_starter",
		"/home/jiahao/Downloads/linux sdk/linux-sdk-demo",
		"/home/jiahao/Lib/nginx-1.5.2",
		"/home/jiahao/Lib/nginx-rtmp-module-master",
		"/home/jiahao/Dropbox/Case/WimeConnect_v1_2_0",
		"/home/jiahao/Dropbox/Case/ZeClock/iOSPlot-master",
		"/home/jiahao/Git/cbox_mediastack",
		"/home/jiahao/Lib/glib-2.42.1",
		"/home/jiahao/Lib/gstreamer-1.4.0",
		"/home/jiahao/Git/cbox_mediastack/arec_mw",
		"/home/jiahao/Lib/gstreamer-1.0.6",
		"/home/jiahao/Git/gst-plugins-base",
		"/home/jiahao/Git/rtsp_rtp_server",
		"/home/jiahao/Swift/FlappySwift",
		"/home/jiahao/TestCode/cbox_export",
		"/home/jiahao/tools/gperftools-2.1",
		"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtspserver",
		"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_rtspserver",
		"/home/jiahao/Git/arec_ct",
		"/home/jiahao/Git/msrgui",
		"/home/jiahao/Git/gst-rtsp-server",
		"/home/jiahao/Templates/cbox_os/arec_fs/opt/mw/bin/JSON",
		"/home/jiahao/Git/msr13",
		"/home/jiahao/Git/cbox_mediastack/sw_plugin",
		"/home/jiahao/Git/rtmpdump",
		"/home/jiahao/Lib/ffmpeg",
		"/home/jiahao/Git/gst-libav",
		"/home/jiahao/Downloads/gst-libav-1.4.0",
		"/home/jiahao/Downloads/gst-libav-1.4.0/ext/libav",
		"/home/jiahao/Downloads/MyFilter",
		"/home/jiahao/Git/msrgst",
		"/home/jiahao/Lib/gstreamer",
		"/home/jiahao/Lib/msr-deb/gstreamer",
		"/home/jiahao/Git/tmp/msrgui"
	],
	"last_version": 3083,
	"last_window_id": 459,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1028.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"m_is",
						"m_is_userabort	bool"
					],
					[
						"get",
						"GetSampleData()	MUXSAMPLE *"
					],
					[
						"mp_cond_src_",
						"mp_cond_src_stop	ArecCond *"
					],
					[
						"GST_CLOCK_TIME",
						"GST_CLOCK_TIME_IS_VALID	macro"
					],
					[
						"CURL_SOCK",
						"CURL_SOCKET_TIMEOUT	macro"
					],
					[
						"curl_multi_setop",
						"curl_multi_setopt(CURLM *multi_handle, CURLMoption option, ...)	CURLMcode"
					],
					[
						"scal",
						"scaled_duration"
					],
					[
						"segment",
						"segment_start"
					],
					[
						"m_is_",
						"m_is_has_sub_video	bool"
					],
					[
						"m_is_has",
						"m_is_has_out_audio	bool"
					],
					[
						"GST_TIME_VA",
						"GST_CLOCK_TIME_IS_VALID	macro"
					],
					[
						"p",
						"pts	GstClockTime"
					],
					[
						"Get",
						"GetTotalOffset()	int64"
					],
					[
						"gst_buffer_un",
						"gst_buffer_unmap(GstBuffer *buffer, GstMapInfo *info)	void"
					],
					[
						"m_videoStrea",
						"m_videoStreamOutCurTime	int64"
					],
					[
						"m_audioStream",
						"m_audioStreamOutCurTime	int64"
					],
					[
						"m_audioStre",
						"m_audioStreamOutCurTime	int64"
					],
					[
						"m_video",
						"m_videoStreamTimeHandler	CTimeCodeHandler"
					],
					[
						"video",
						"videoStreamTimeHandler	CTimeCodeHandler"
					],
					[
						"m_video_pre",
						"m_video_pre_cur_diff	int64"
					],
					[
						"m_audio_out",
						"m_drop_audio_outside	bool"
					],
					[
						"to",
						"p_to_fakesrc_dispatch_func_ptr	TO_FAKESRC_DISPATCH_FUNC"
					],
					[
						"PROP_DISPA",
						"PROP_DISPATCH_FUNC_TO_FAKESRC	enum <anonymous>"
					],
					[
						"printf",
						"printf	printf â€¦"
					],
					[
						"rec",
						"record_time	gint64"
					],
					[
						"comman",
						"commandReply	UploaderCommand"
					],
					[
						"eSE_HEAD",
						"eSE_Run_TransHeadStart	eSEEventCode"
					],
					[
						"is_",
						"is_upload_zero_file	gboolean"
					],
					[
						"MP4_STRE",
						"MP4_STREAMING_STOPPING	MP4_STREAMING_STATUS"
					],
					[
						"iTie",
						"iTimeScale	int64"
					],
					[
						"thre",
						"transfer_thread_close	gboolean"
					],
					[
						"us",
						"usleep_time	guint64"
					],
					[
						"DEFU",
						"DEFAULT_SPEED_LEVEL	macro"
					],
					[
						"g_value_get_uint",
						"g_value_get_uint64(const GValue *value)	guint64"
					],
					[
						"re",
						"ResumeAllTask()	eMEXPStatus"
					],
					[
						"eMEX",
						"eMEXPStatus	typedef"
					],
					[
						"m_m",
						"m_pTaskMgr	CTasksMgr *"
					],
					[
						"eME",
						"eMEXP_ERROR	eMEXPStatus"
					],
					[
						"value",
						"valueint	int"
					],
					[
						"isA",
						"isAnyFileExeError	bool"
					],
					[
						"eM",
						"eMEXP_ERROR	eMEXPStatus"
					],
					[
						"append",
						"append(const _CharT *__s)	basic_string<_CharT, _Traits, _Alloc> &"
					],
					[
						"mutal",
						"mutable_filesrc()	::tutorial::Filesrc *"
					],
					[
						"uploader_task",
						"uploader_task_state() const	::tutorial::UploaderTaskStateCode"
					],
					[
						"set_upload",
						"set_uploader_task_state(::tutorial::UploaderTaskStateCode value)	void"
					],
					[
						"set_resp",
						"set_uploader_state_code(::tutorial::UploaderStateCode value)	void"
					],
					[
						"base",
						"basenameRegex	GRegex *"
					],
					[
						"d",
						"d_name	char [256]"
					],
					[
						"eMe",
						"eMEXP_OK	eMEXPStatus"
					],
					[
						"muta",
						"mutable_filesrc()	::tutorial::Filesrc *"
					],
					[
						"dir",
						"dirname(char *__path)	char *"
					],
					[
						"bas",
						"basename(const char *__filename)	char *"
					],
					[
						"emEX",
						"eMEXP_OK	eMEXPStatus"
					],
					[
						"eMex",
						"eMEXP_ERROR	eMEXPStatus"
					],
					[
						"GST_ST",
						"GST_STATE_PAUSED	GstState"
					],
					[
						"upo",
						"uploader_path"
					],
					[
						"uplo",
						"uploader_path"
					],
					[
						"upl",
						"uploader_path"
					],
					[
						"eMEXP",
						"eMEXP_OK	eMEXPStatus"
					],
					[
						"task_pr",
						"task_progress() const	::google::protobuf::int32"
					],
					[
						"as",
						"asInteger()	integer"
					],
					[
						"sample",
						"SAMPLE"
					],
					[
						"UPLOADER_NOTIFIED_TASK_",
						"UPLOADER_NOTIFIED_TASK_STATUS	UPLOADER_NOTIFIED"
					],
					[
						"UPLOADER_NOTIFIED_",
						"UPLOADER_NOTIFIED_TASK_RESULT	UPLOADER_NOTIFIED"
					],
					[
						"parsefrom",
						"ParseFromArray(const void *data, int size)	bool"
					],
					[
						"task",
						"upload_task_list_info() const	const ::tutorial::UploaderTaskListInfo &"
					],
					[
						"Ser",
						"SerializeAsString() const	string"
					],
					[
						"set_task",
						"set_allocated_upload_task_list_info(::tutorial::UploaderTaskListInfo *upload_task_list_info)	void"
					],
					[
						"dbug",
						"PrintDebugString() const	void"
					],
					[
						"uploader",
						"uploader_version() const	const ::std::string &"
					],
					[
						"GST_STATE_R",
						"GST_STATE_READY	GstState"
					],
					[
						"GST_STATE_RE",
						"GST_STATE_RETURN	macro"
					],
					[
						"getTask",
						"GetTaskBySPId(const unsigned long nTaskSPId)	CTaskBase *"
					],
					[
						"m_",
						"m_pTaskMgr	CTasksMgr *"
					],
					[
						"e",
						"eMEXPStatus	typedef"
					],
					[
						"setIn",
						"setInteger(sql::Field &field, integer value)	void"
					],
					[
						"set",
						"setString(int index, string value)	void"
					],
					[
						"m",
						"mutable_write_split_file()	::tutorial::UploaderWriteSplitFile *"
					],
					[
						"set_",
						"set_src_location(const char *value)	void"
					],
					[
						"mu",
						"mutable_write_file()	::tutorial::UploaderWriteFile *"
					],
					[
						"m_pW",
						"m_pWriteSplitFileTable	sql::Table *"
					],
					[
						"Set",
						"setUploaderState(tutorial::UploaderStateCode status)	tutorial::UploaderResponseCode"
					],
					[
						"MA",
						"MAX_TASK	macro"
					],
					[
						"De",
						"DeleteTaskInfobByTaskId(int nTaskId)	bool"
					],
					[
						"m_db",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"GetTak",
						"GetTaskSPId() const	unsigned long"
					],
					[
						"CopyFrom",
						"CopyFrom(const tutorial::UploaderTaskInfo &from)	void"
					],
					[
						"CP",
						"CopyFrom(const google::protobuf::Message &from)	void"
					],
					[
						"cop",
						"CopyFrom(const tutorial::UploaderTaskInfo &from)	void"
					],
					[
						"reco",
						"totalRecordCount()	int"
					],
					[
						"qu",
						"queryStr	const string"
					],
					[
						"recor",
						"record	Record"
					],
					[
						"record",
						"Record	class"
					],
					[
						"FieldSet",
						"FieldSet(std::vector<Field> &definition)	constructor"
					],
					[
						"getBy",
						"getByIndex(int index)	sql::Field *"
					],
					[
						"strB",
						"strB64Ret	string"
					],
					[
						"serialize",
						"SerializeToArray(void *data, int size) const	bool"
					],
					[
						"comm",
						"commandReply	UploaderCommand"
					],
					[
						"dbus_message_iter_get_",
						"dbus_message_iter_get_fixed_array(DBusMessageIter *iter, void *value, int *n_elements)	void"
					],
					[
						"dbus_message_iter_append",
						"dbus_message_iter_append_fixed_array(DBusMessageIter *iter, int element_type, const void *value, int n_elements)	dbus_bool_t"
					],
					[
						"Pare",
						"ParseFromArray(const void *data, int size)	bool"
					],
					[
						"mutable",
						"mutable_task_info()	::tutorial::UploaderTaskInfo *"
					],
					[
						"locat",
						"ftp_upload() const	const ::tutorial::UploaderFtpUpload &"
					],
					[
						"taks",
						"mutable_task_info()	::google::protobuf::RepeatedPtrField< ::tutorial::UploaderTaskInfo> *"
					],
					[
						"UploaderTaskInfo",
						"UploaderTaskListInfo	class"
					],
					[
						"Pa",
						"ParseFromArray(const void *data, int size)	bool"
					],
					[
						"DBUS_TYPE_ST",
						"DBUS_TYPE_STRING	macro"
					],
					[
						"set_taskTy",
						"set_task_type(::tutorial::UploaderTaskType value)	void"
					],
					[
						"mutalbe",
						"mutable_upload_task_list_info()	::tutorial::UploaderTaskListInfo *"
					],
					[
						"method",
						"set_method_type(::tutorial::UploaderCommand_UploaderMethodType value)	void"
					],
					[
						"upload",
						"upload_status() const	::tutorial::UploaderStateCode"
					],
					[
						"Taskhadn",
						"TaskHandleWakeup()	void"
					],
					[
						"m_pTask",
						"m_pTaskHandleWait	ArecCond *"
					],
					[
						"pr",
						"task_priorty() const	::google::protobuf::int32"
					],
					[
						"Write_",
						"Write_split_file	class"
					],
					[
						"Uploader",
						"UpdateTaskInfo(const tutorial::UploaderTaskInfo &uploaderTaskInfo)	bool"
					],
					[
						"m_p",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"Creat",
						"CreateWriteSplitFileTable()	bool"
					],
					[
						"Create",
						"CreateWriteFileTable()	bool"
					],
					[
						"Creaet",
						"CreateFtpUploadTable()	bool"
					],
					[
						"m_pD",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"m_pDB",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"dele",
						"deleteWriteSplitFileInfo(int nTaskId)	bool"
					],
					[
						"delet",
						"deleteFtpUploadInfoById(int nTaskId)	bool"
					],
					[
						"write",
						"write_split_file() const	const ::tutorial::UploaderWriteSplitFile &"
					],
					[
						"writeSpTo",
						"writeSplitFileInfoToRecord(int nTaskId, const tutorial::UploaderWriteSplitFile &uploaderWriteSplitFile, sql::Record &record)	bool"
					],
					[
						"m_pWrite",
						"m_pWriteSplitFileTable	sql::Table *"
					],
					[
						"getRe",
						"getRecordByKeyId(integer keyId)	sql::Record *"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 375.0,
				"last_filter": "clear",
				"selected_items":
				[
					[
						"clear",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"clear book",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"bookm",
						"Bookmarks: Clear All"
					],
					[
						"bookmark",
						"Bookmarks: Select All"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"show",
						"Change List: Show"
					],
					[
						"change",
						"Change List: Show"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"whocall",
						"WhoCalled: Run indexer"
					],
					[
						"who",
						"WhoCalled: Add/remove project folders"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"remove pag",
						"Package Control: Remove Package"
					],
					[
						"remove p",
						"Package Control: Remove Package"
					],
					[
						"sni",
						"Snippet: CDATA"
					],
					[
						"ifdef",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"if",
						"Snippet: If Condition"
					],
					[
						"defin",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"goto",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"goto ",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"bookam",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"",
						"About"
					],
					[
						"show ",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"add book",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addboo",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"remove all",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"showall",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"sublimebook",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"sublimebookmakr",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"book",
						"Bookmarks: Select Next"
					],
					[
						"add",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addb",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"isnt",
						"Package Control: Install Package"
					],
					[
						"Package Control: r",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ins",
						"Package Control: Install Package"
					],
					[
						"sublime se",
						"Preferences: SublimeClang Settings â€“ User"
					],
					[
						"package",
						"Package Control: Install Package"
					],
					[
						"pack",
						"Preferences: Browse Packages"
					],
					[
						"packe",
						"Preferences: Browse Packages"
					]
				],
				"width": 514.0
			},
			"console":
			{
				"height": 414.0,
				"history":
				[
					"command: jump_forward",
					"asdfsdf",
					"jump_forward",
					"jump_farword",
					"clear",
					"displayName",
					"show all command",
					"command",
					"view.encoding()",
					"navigation_history_back",
					"switch_script",
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/atomsrecovery.cpp",
				"/home/jiahao/nfs/sh/fragmentedMp4.sh",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/audio/audio-format.h",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/audio/audio-info.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/sqlite_handler/arec_dbHandler.cpp",
				"/home/jiahao/nfs/nginx/html/index.html",
				"/usr/share/nginx/html/50x.html",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/arec_uploader.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/arec_streamengine.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstbuffer.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/ArecStreamEngineData.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlbasesink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp",
				"/home/jiahao/nfs/sh/liveMp4.sh",
				"/usr/share/nginx/html/index.html",
				"/usr/local/nginx/html/index.html",
				"/home/jiahao/nfs/video_player.html",
				"/home/jiahao/Dropbox/TestCode/Gstreamer/buffer.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/module_list",
				"/home/jiahao/nfs/JSON/multifile_mp4_record.json",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/arec_mediaExecutor.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/arec_mediaExporterGstBase.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/arec_mediaExporterGstBase.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/arec_taskBase.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/arec_taskBase.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/proto_buf/gst_property/gst_property.pb.h",
				"/home/jiahao/Dropbox/TestCode/Gstreamer/5_1.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/Makefile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/Makefile.lib.mk",
				"/home/jiahao/Git/arec_ct/testbed/arec_streamengine_testbed/Makefile",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/get_state.json",
				"/home/jiahao/nfs/JSON/set_state_record.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/set_state_resume.json",
				"/home/jiahao/nfs/JSON/mp4_record.json",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_audioparsers/gstaacparse.c",
				"/home/jiahao/Git/msrgst/arec_audioparsers/Makefile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.h",
				"/home/jiahao/Git/arec_ct/testbed/arec_streamengine_testbed/IArecStreamEngine.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstelement.h",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/glib-2.0/gobject/gobject.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstclock.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstobject.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gstbasesink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstelements.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mpegtsmux/dataqueue/dataqueue.h",
				"/home/jiahao/nfs/m_preview.js",
				"/home/jiahao/nfs/rtp_audio_problem_00.txt",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/Makefile",
				"/home/jiahao/tmp/ubuntu-14.04/Dockerfile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gstbasesink.h",
				"/home/jiahao/nfs/sh/ftp_upload.sh",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstpoll.h",
				"/home/jiahao/nfs/sh/sftp_upload.sh",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/curl/curl.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlbasesink.h",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/curl/multi.h",
				"/home/jiahao/tmp/ubuntu-14.04/install-gstreamer-1.4.x.sh",
				"/home/jiahao/Git/arec_ct/arec_ct.sublime-project",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_builder.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_multifile/gstmultifilesink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/rtpjitterbuffer.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/rtpjitterbuffer.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/Makefile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/Makefile.lib.mk",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c",
				"/home/jiahao/nfs/BurnTest/CBOX_SDK_ENV.postman_environment",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/glib-2.0/glib/gerror.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c",
				"/home/jiahao/Git/cbox_sdk4/linux_devkit/usr/include/IArecLog.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstmessage.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_previewrecord.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/atoms.cpp",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/lib/glib-2.0/include/glibconfig.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlsftpsink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlsshsink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/atoms.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_flv/gstflvmux.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/areccurlhttpsinktypedef.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/arec_uploader.h",
				"/home/jiahao/TestCode/test.cpp",
				"/home/jiahao/.config/sublime-text-3/Packages/User/SublimeClang.sublime-settings",
				"/home/jiahao/tools/google-breakpad-read-only/src/testing/gtest/make/Makefile",
				"/home/jiahao/.kermrc",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/base/gstbasesink.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_flv/gstflvmux.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstelement.h",
				"/home/jiahao/Downloads/log/messages.0",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtspsrc.h",
				"/home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/rtsp/gstrtspconnection.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtsp.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtsp.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/dll_mgr/arec_interface.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfakesrc.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfakesrc.cpp",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/bits/pthreadtypes.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp",
				"/home/jiahao/nfs/S40network",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/arec_mediadetect.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/arec_mediadetect.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/arec_mediadetect_wrapper.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/Sample/sample.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/arec_mp4recover.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/Sample/sample.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmp.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mpegtsmux/utils/arec_cond.h",
				"/home/jiahao/Git/curl/src/tool_setopt.c",
				"/home/jiahao/Git/curl/src/tool_setopt.h",
				"/home/jiahao/Git/curl/src/tool_operate.c"
			],
			"find":
			{
				"height": 40.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/home/jiahao/Git/arec_ct/media_engine",
					"",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib",
					"/home/jiahao/Git/arec_ct/media_engine",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine",
					"",
					"<open files>",
					"",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader",
					"/home/jiahao/Git/arec_ct/media_engine/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/sqlite_handler",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/sqlite_handle",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app",
					"/home/jiahao/Git/arec_ct/media_engine/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/",
					"/home/jiahao/Git/arec_ct/media_engine/arec_mp4recver",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/arec_mp4recover.h",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/Release.sh",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_pulse",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_plugin",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.c",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.cpp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtspserver/",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Templates/cbox_os/arec_fs/arec/2014_08_15_15_35_28/minicom.cap",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CUdpToFile/test00000_00.txt",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/isomp4/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Git/msr13/",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"h264_format",
					"INPUT_AVC",
					"fragment_sequence",
					"gst_qt_mux_pad_fragment_add_buffer",
					"fragment_duration",
					"gst_qt_mux_pad_fragment_add_buffer",
					"fragment_duration",
					"qtmux->fragment_duration",
					"PROP_FRAGMENT_DURATION",
					"fragment-duration",
					"stsd",
					"atom_stsd_remove_entries",
					"gst_qt_mux_video_sink_set_caps",
					"qtpad->h264_format",
					"atom_trak_set_video_type\natom_trak_set_video_type",
					"atom_trak_set_video_type",
					"atom_trak_add_video_entry",
					"atom_trak_add_audio_entry",
					"atom_trak_add_video_entry",
					"stsd",
					"stdb",
					"fragment_duration",
					"stsd",
					"qtmux->fragment_duration",
					"PROP_FRAGMENT_DURATION",
					"PROP_FRAGMENT_DURATIONZ",
					"PROP_FRAGMENT_DURATION",
					"fragment",
					"DBG_SENGINE",
					"DEBUG_SENGINE",
					"dd",
					"m_is_live_record_mode",
					"m_drop_audio_outside",
					"InsertAudioData",
					"eSE_Run_TransTailStart",
					"m_drop_audio_outside",
					"SetEnableAllInput",
					"SetEnableAllInput, is_enable",
					"push audio",
					"push video data",
					"m_drop_audio_outside",
					"eSE_Run_TransHeadStart",
					"m_drop_audio_outside",
					"HandleAudioData",
					"m_drop_audio",
					"SetEnableAllInput",
					"m_drop_audio",
					"mp_audio_push_ptr",
					"HandleAudioDataSub",
					"-35",
					"RecordOffsetStartTime",
					"jiahao",
					"MP4_",
					"mp_cond_src_run",
					"is_clean",
					"CreateDemuxGraph",
					"InsertVideoDataFromDemux",
					"mp_video_push_ptr",
					"mp_video_queue",
					"video_sink",
					"InsertVideoDataFromDemux",
					"video_sink",
					"p_demuxer",
					"CreateDemuxGraph",
					"MP4_STREAMING_RELEASE",
					"=",
					"AddDbusReceiveListen",
					"ListenMethodCallAndReceiveSignal",
					"m_pDbusHandler",
					"m_methodCallBack",
					"pData",
					"listenMethodCall",
					"pData",
					"ListenMethodCallAndReceiveSignal",
					"AddDbusReceiveListen",
					"RunHandleTaskMgr",
					"adder->new_segment_pending",
					"adder->first_mix",
					"adder->pre_mix_num",
					"adder->empty_sample_count",
					"adder->is_empty_pad",
					"REALLY_EMPTY",
					"pad_status",
					"REALLY_EMPTY",
					"handle_mux_thread",
					"qtmux->moov",
					"moov",
					"record_status=",
					"msg from streamengine",
					"msg from streamengine = streamengine",
					"buffer_timeout",
					"on_message_async_done",
					"buffer_timeout",
					"target_state",
					"mp4mux",
					"dd()",
					"sleep",
					"m_elementMap",
					"pipeline",
					"sink->usleep_time",
					"PROP_SPEED_LEVEL",
					"qtmux->record_time",
					"m_segment",
					"SetSegmentTime",
					"segment_start",
					"start_time",
					"buf->pts",
					"dd()",
					"m_stop_live_record",
					"mp_cond_src_stop",
					"m_is_userabort",
					"mp_cond_src_stop",
					"m_is_errorabort",
					"m_is_userabort",
					"gst_element_set_state",
					"Stop",
					"m_stop_live_record",
					"mp_cond_src_stop",
					"p_sengine->mp_cond_src_stop",
					"p_sengine->mp_cond_src_finish->signal()",
					"p_sengine->mp_cond_src_finish",
					"m_is_errorabort",
					"pthread_create",
					"mp_cond_src_run",
					"handle_event_thread",
					"Wait mux thread",
					"handle_event_thread",
					"m_cb_info"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"INFO_UPLOADER",
					"INFO_CURL",
					"uploader_util.h",
					".",
					""
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 30.0
			},
			"input":
			{
				"height": 38.0
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.clang":
			{
				"height": 384.0
			},
			"output.exec":
			{
				"height": 144.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 56.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"gstqtmux",
						"gst/isomp4/gstqtmux.c"
					],
					[
						"gstqtmux.cpp",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"qtmux",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"arec_strea",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_stream",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_uploader",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_mp4",
						"media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp"
					],
					[
						"gstadder",
						"media_engine/sw_plugin/arec_adder/gstadder.cpp"
					],
					[
						"arecqtmux",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"mp4state",
						"media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp"
					],
					[
						"arec_dbus",
						"media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.cpp"
					],
					[
						"arec_streamig",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_qtmux",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"mpegtsmux.cpp",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstmpetsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"curlbasesink",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"arec_upload",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"cmediaexportergstbase",
						"media_engine/sw_app/arec_uploader/media_engine/plugins/arec_mediaExporterGstBase.cpp"
					],
					[
						"ftpupload",
						"media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.cpp"
					],
					[
						"curlbase",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"arec_task",
						"media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp"
					],
					[
						"arec_streamengine.cpp",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"core/mak",
						"media_engine/sw_plugin/arec_coreelements/Makefile"
					],
					[
						"arec_stream/make",
						"media_engine/sw_lib/arec_streamengine/Makefile.lib.mk"
					],
					[
						"arec_stream/",
						"testbed/arec_streamengine_testbed/Makefile"
					],
					[
						"gstmpegtsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"aacparse",
						"media_engine/sw_plugin/arec_audioparsers/gstaacparse.c"
					],
					[
						"gstelement",
						"media_engine/sw_plugin/base/gst/gstelement.h"
					],
					[
						"arec_streaming",
						"testbed/arec_streamengine_testbed/IArecStreamEngine.h"
					],
					[
						"gstbasesink",
						"media_engine/sw_plugin/base/gstbasesink.c"
					],
					[
						"gstcurlbasesink.c",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstcurlbase",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"mpegtmsux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstaacpa",
						"media_engine/sw_plugin/arec_audioparsers/gstaacparse.c"
					],
					[
						"gstbasesink.c",
						"media_engine/sw_plugin/base/gstbasesink.c"
					],
					[
						"gstbsesink",
						"media_engine/sw_plugin/base/gstbasesink.c"
					],
					[
						"gstcurlbasesink",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"makefile.lib.mk",
						"media_engine/sw_lib/arec_mediadetect/Makefile.lib.mk"
					],
					[
						"gstrtspsrc",
						"media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"rtpjitter",
						"media_engine/sw_plugin/arec_rtpmanager/rtpjitterbuffer.c"
					],
					[
						"gstmultifilesink",
						"media_engine/sw_plugin/arec_multifile/gstmultifilesink.c"
					],
					[
						"gstfilesink",
						"media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp"
					],
					[
						"gstrtpjitter",
						"media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"gstcurlsshsink.c",
						"media_engine/sw_plugin/arec_curl/gstcurlsshsink.c"
					],
					[
						"gstcurlssh",
						"media_engine/sw_plugin/arec_curl/gstcurlsshsink.c"
					],
					[
						"gstcurlsftp",
						"media_engine/sw_plugin/arec_curl/gstcurlsftpsink.c"
					],
					[
						"ftp",
						"media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.cpp"
					],
					[
						"gstcurlbasesin",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstflvmux",
						"media_engine/sw_plugin/arec_flv/gstflvmux.cpp"
					],
					[
						"mpegtsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstelement.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstelements.cpp"
					],
					[
						"gstrtmpsink",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"arec_streamengine.h",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.h"
					],
					[
						"filesink",
						"media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp"
					],
					[
						"arec_streamengine",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.h"
					],
					[
						"gstrtspconnection",
						"cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/rtsp/gstrtspconnection.h"
					],
					[
						"gstrtsp",
						"media_engine/sw_plugin/arec_rtsp/gstrtsp.c"
					],
					[
						"a_interf",
						"media_engine/sw_app/arec_uploader/dll_mgr/arec_interface.h"
					],
					[
						"gstcurlbas",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstfakesrc",
						"media_engine/sw_plugin/arec_coreelements/gstfakesrc.cpp"
					],
					[
						"gstfakesink",
						"media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp"
					],
					[
						"arec_mp4recover_wrapper",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp"
					],
					[
						"arec_mp4recover",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp"
					],
					[
						"media",
						"media_engine/sw_lib/arec_mediadetect/arec_mediadetect.cpp"
					],
					[
						"arec_mp4recover.c",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover.cpp"
					],
					[
						"arec_mp4rec",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp"
					],
					[
						"arec_mediad",
						"media_engine/sw_lib/arec_mediadetect/arec_mediadetect_wrapper.cpp"
					],
					[
						"arec_mediadetect",
						"media_engine/sw_lib/arec_mediadetect/arec_mediadetect.cpp"
					],
					[
						"rtmp.c",
						"media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.c"
					],
					[
						"",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"gstcurl",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstfilesink.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp"
					],
					[
						"tool_setopt.c",
						"~/Git/curl/src/tool_setopt.c"
					],
					[
						"tool_operate.c",
						"~/Git/curl/src/tool_operate.c"
					],
					[
						"curlssh",
						"media_engine/sw_plugin/arec_curl/gstcurlsshsink.c"
					],
					[
						"gstcurlsft",
						"media_engine/sw_plugin/arec_curl/gstcurlsftpsink.c"
					],
					[
						"arec_strm",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"gstjitterbuf",
						"media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"gstrtspsrc.c",
						"media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"gstqtmx",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"gstrtmpsin",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"gstrtpbasedepayload",
						"cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/rtp/gstrtpbasedepayload.h"
					],
					[
						"gstrtph264depay.cpp",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"gsth264de",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"gstrtph264de",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"gstrtmpsink.cpp",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"gstmpegtmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"rtmp.cpp",
						"media_engine/sw_plugin/arec_rtmp/gstrtmp.cpp"
					],
					[
						"gstrtmp",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"mp4sta",
						"media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp"
					],
					[
						"arec_string",
						"testbed/arec_streamengine_testbed/IArecStreamEngine.h"
					],
					[
						"gsth264dep",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"carecstreamengine",
						"testbed/arec_streamengine_testbed/ArecStreamEngineData.h"
					],
					[
						"flvmux",
						"media_engine/sw_plugin/arec_flv/gstflvmux.cpp"
					],
					[
						"arec_strem",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_uplo",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_uploadertask",
						"media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp"
					],
					[
						"arec_u",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_dbhan",
						"media_engine/sw_app/arec_uploader/sqlite_handler/arec_dbHandler.cpp"
					],
					[
						"arec_uplodatas",
						"media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp"
					],
					[
						"arec_uploader.cpp",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"fakesink",
						"media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp"
					],
					[
						"mw_action.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstinputselector.cpp"
					],
					[
						"librtmp.c",
						"media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.c"
					],
					[
						"rtspsrc",
						"media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"getprogress",
						"cbox_sdk/linux_devkit/usr/include/elementary-1/elm_widget_progressbar.h"
					],
					[
						"gstmpegtmsu",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"rtmpsrc",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsrc.cpp"
					],
					[
						"gstmpegtmsux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstfakesrc.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstfakesrc.cpp"
					],
					[
						"arec_uplaoder",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"gstfakesink.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp"
					],
					[
						"arec_mpegtsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"arec_streamgin",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"gstrtspserver",
						"media_engine/sw_plugin/arec_rtspserver/rtsp-server.c"
					],
					[
						"gstjitter",
						"media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"arec_uplaod",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"streamen",
						"testbed/arec_streamengine_testbed/ArecStreamEngineData.h"
					],
					[
						"streamdata",
						"testbed/arec_streamengine_testbed/ArecStreamEngineData.h"
					],
					[
						"steramengine_test",
						"testbed/arec_streamengine_testbed/arec_streamengine_testbed.cpp"
					],
					[
						"iarecstreamengine.h",
						"testbed/arec_streamengine_testbed/IArecStreamEngine.h"
					],
					[
						"arec_tsdmux",
						"media_engine/sw_plugin/arec_mpegtsdemux/tsdemux.cpp"
					],
					[
						"arec_uploade",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_media_",
						"testbed/arec_mediadetect_testbed/arec_mediadetect_testbed.cpp"
					],
					[
						"arec_mediadetect_testbed.cpp",
						"testbed/arec_mediadetect_testbed/arec_mediadetect_testbed.cpp"
					],
					[
						"arec",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"stream/",
						"media_engine/sw_lib/arec_streamengine/Makefile"
					],
					[
						"streamengin/make",
						"media_engine/sw_lib/arec_streamengine/Makefile"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"arec",
						"~/Git/arec_ct/arec_ct.sublime-project"
					],
					[
						"gstrea",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"gui",
						"~/Git/msrgui/msrgui.sublime-project"
					],
					[
						"gstream",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msr13",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"rtsp",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"rts",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msrgst",
						"~/Git/msrgst/msrgst.sublime-project"
					],
					[
						"m3",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"gst",
						"~/Git/msrgst/msrgst.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 530.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 275.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1847.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"isInterle",
						"isInterleaveDecide(string s1, string s2, string s3)	bool"
					],
					[
						"isInter",
						"isInterleaveDecide(string s1, string s2, string s3)	bool"
					],
					[
						"sub",
						"subs3	string"
					],
					[
						"p",
						"push_back(value_type &&__x)	void"
					],
					[
						"string",
						"stringstream"
					],
					[
						"map",
						"map<typename _Key, typename _Tp>	class"
					],
					[
						"is_app",
						"is_append_tail	bool"
					],
					[
						"is",
						"is_append_tail	bool"
					],
					[
						"is_ap",
						"is_append_tail	bool"
					],
					[
						"co",
						"pre_count_down	double"
					],
					[
						"ser",
						"server_reply	char[][]"
					],
					[
						"socket",
						"socket(int __domain, int __type, int __protocol)	int"
					],
					[
						"file",
						"file_par	FileParameter"
					],
					[
						"m",
						"media_state	MediaState"
					],
					[
						"cou",
						"count_down_freeze_times	int"
					],
					[
						"MEDIA_STATE_RE",
						"MEDIA_STATE_RECORD	MediaState"
					],
					[
						"pr",
						"privkey	char *"
					],
					[
						"retrieve",
						"retrieve_json_string(cJSON *rootJSON, const char *field_name)	char *"
					],
					[
						"stop",
						"stopRtpGraph()	void"
					],
					[
						"pP",
						"pPush_param	void *"
					],
					[
						"VIDO",
						"VIDEOINPUTPTR	typedef"
					],
					[
						"stream",
						"streaming_mux	GstElement *"
					],
					[
						"streamen",
						"streamengine_live_record_hndl	CLiveRecordBySEHandler *"
					],
					[
						"Get",
						"GetParamValue(int ParamType, void *pData)	eSEStatus"
					],
					[
						"stea",
						"streamengine_live_record_hndl	CLiveRecordBySEHandler *"
					],
					[
						"Is",
						"GetIsPostErr()	bool"
					],
					[
						"gst_obje",
						"gst_object_unref(gpointer object)	void"
					],
					[
						"gst_obj",
						"gst_object_ref(gpointer object)	gpointer"
					],
					[
						"loca",
						"location_name	char[]"
					],
					[
						"retr",
						"retrieve_json_string(cJSON *rootJSON, const char *field_name)	char *"
					],
					[
						"str",
						"streamengine_live_record_hndl	CLiveRecordBySEHandler *"
					],
					[
						"MW_MD_",
						"MW_MD_OK	enum <anonymous>"
					],
					[
						"_medai",
						"_mediadetect_release(MW_MediaDetect_Prm *mediadetect_prm)	void"
					],
					[
						"GST_FLOW",
						"GST_FLOW_OK	GstFlowReturn"
					],
					[
						"push",
						"push_base_time	gint64 [16]"
					],
					[
						"curre",
						"current_push_time	gint64"
					],
					[
						"gt",
						"GetSampleCounts()	int"
					],
					[
						"de",
						"p_data_queue	DataQueue *"
					],
					[
						"current",
						"current_time_diff	guint64"
					],
					[
						"base",
						"base_pts	gint64"
					],
					[
						"audio_pts",
						"audio_base_pts	gint64"
					],
					[
						"PROP",
						"PROP_DELAY_DROP_TIME	enum <anonymous>"
					],
					[
						"current_time",
						"current_time_diff"
					],
					[
						"video_base",
						"video_base_pts	guint64"
					],
					[
						"GST_CL",
						"GST_CLOCK	macro"
					],
					[
						"video_base_",
						"video_base_current_time	guint64"
					],
					[
						"pre_",
						"audio_pre_current_time	guint64"
					],
					[
						"buff",
						"buff_time_diff	guint64"
					],
					[
						"curren",
						"current_time_diff	guint64"
					],
					[
						"pre",
						"pre_current_time	guint64"
					],
					[
						"LIVE",
						"LIVE_SYNC_LOW_THRESHOLD	macro"
					],
					[
						"SYNC_",
						"SYNC_LOW_THRESHOLD	macro"
					],
					[
						"moov",
						"moov_recov_file_path	gchar *"
					],
					[
						"tr",
						"trak	AtomTRAK *"
					],
					[
						"fclose",
						"fclose(FILE *__stream)	int"
					],
					[
						"sa",
						"sample_count	int"
					],
					[
						"pad",
						"pad_mix_info	PAD_MIX_INFO[]"
					],
					[
						"GST_OK",
						"GST_FLOW_OK	GstFlowReturn"
					],
					[
						"pedn",
						"pending_events_mutex	pthread_mutex_t"
					],
					[
						"pend",
						"pending_events_mutex	pthread_mutex_t"
					],
					[
						"PTHREAD_MU",
						"PTHREAD_MUTEX_INITIALIZER	macro"
					],
					[
						"MIN_THR",
						"MIN_THROSHOLD_FOR_RECORD	macro"
					],
					[
						"is_",
						"is_empty_pad	gboolean [16]"
					],
					[
						"re",
						"is_record	gboolean"
					],
					[
						"TIME",
						"GST_FORMAT_TIME"
					],
					[
						"watit",
						"p_cond_wait_data	ArecCond *"
					],
					[
						"curr",
						"currMixIndex	gint64"
					],
					[
						"MIX_",
						"MIX_NUMBER_NULL	macro"
					],
					[
						"buffer",
						"buffer_threshold	int"
					],
					[
						"get",
						"GetLastIndex()	gint64"
					],
					[
						"INDEX_",
						"INDEX_WAIT_FOR_DATA	MIX_INDEX_ACTION"
					],
					[
						"INDE",
						"INDEX_READY_FOR_PUSH_DATA	MIX_INDEX_ACTION"
					],
					[
						"PAD_",
						"PAD_HAS_DATA_CAN_PUSH	PAD_STATUS"
					],
					[
						"cu",
						"currMixIndex	gint64"
					],
					[
						"GST_E",
						"GST_EVENT	macro"
					],
					[
						"pthread_destroy",
						"pthread_mutex_destroy(pthread_mutex_t *__mutex)	int"
					],
					[
						"pthread_init",
						"pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr)	int"
					],
					[
						"CURRENT_SAM",
						"CURRENT_SMALL_TAHN_ONE_PAD	MIX_INDEX_ACTION"
					],
					[
						"CURR",
						"CURRENT_EQUAL_TO_ONE_PAD	MIX_INDEX_ACTION"
					],
					[
						"CURRENT",
						"CURRENT_EQUAL_TO_ONE_PAD	MIX_INDEX_ACTION"
					],
					[
						"d",
						"duration	GstClockTime"
					],
					[
						"guint",
						"guint64	typedef"
					],
					[
						"gint",
						"gint64	typedef"
					],
					[
						"had",
						"has_data"
					],
					[
						"GST_CLOCKE",
						"GST_CLOCK_TIME_NONE"
					],
					[
						"GST_TIME",
						"GST_FORMAT_TIME"
					],
					[
						"vid",
						"video_frame_time	int"
					],
					[
						"PROP_CONST",
						"PROP_CONSTANT_VIDEO_TIME	enum <anonymous>"
					],
					[
						"PROP_CON",
						"PROP_CONSTANT_VIDEO_FRAME_TIME	enum <anonymous>"
					],
					[
						"video",
						"video_frame_time	guint"
					],
					[
						"g_strd",
						"g_strdup(const gchar *str)	gchar *"
					],
					[
						"LI",
						"LINDEX_"
					],
					[
						"LOG_DBG",
						"LOG_PDBG	macro"
					],
					[
						"Set",
						"SetSecOfM3u8(int nSecOfM3u8)	void"
					],
					[
						"set",
						"SetSecOfM3u8(int nSecOfM3u8)	void"
					],
					[
						"pRtp",
						"pRtpQueue	GstElement*"
					],
					[
						"Log",
						"Log(const int priority, const char *message, ...)	void"
					],
					[
						"m_rid",
						"m_ridLiveTypeMap	std::map<int, int>"
					],
					[
						"Conv",
						"ConvertToStr(T value)	STDSTR"
					],
					[
						"ran",
						"random()	long"
					],
					[
						"link",
						"linkTeeAndElement(GstElement *pTee, GstElement *pElement)	ARESULT"
					],
					[
						"ARE",
						"AREC_SUCCESS	macro"
					],
					[
						"crea",
						"createElement(const STDSTR &strElementName, const STDSTR &strGivenName, GstElement **ppElement)	ARESULT"
					],
					[
						"Conver",
						"ConvertStrTo<typename T>(STDSTR str)	T"
					]
				]
			},
			"buffers":
			[
				{
					"file": "arec_mw/mw_action.cpp",
					"settings":
					{
						"buffer_size": 111112,
						"line_ending": "Unix"
					}
				},
				{
					"file": "arec_mw/mw_streamengine_live_record.cpp",
					"settings":
					{
						"buffer_size": 18628,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Searching 11792 files for \"release streamengine\" (case sensitive)\n\n~/Git/cbox_mediastack/arec_mw/mw:\n    <binary>\n\n/home/jiahao/Git/cbox_mediastack/arec_mw/mw_action.cpp:\n 1386  \n 1387                          streamengine_release (CData->streamengine_prm.p_streamengine, CData->streamengine_prm.handle_se);\n 1388:                         MW_INFO (\"release streamengine\\n\");\n 1389  \n 1390                          //jiahao, 20150811, set fakesink func to streamingengine for record\n\n~/Git/cbox_mediastack/bin/mw:\n    <binary>\n\n3 matches across 3 files\n",
					"settings":
					{
						"buffer_size": 552,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"file": "arec_mw/mw.h",
					"settings":
					{
						"buffer_size": 3132,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 375.0,
				"last_filter": "remove",
				"selected_items":
				[
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"who",
						"WhoCalled: Run indexer"
					],
					[
						"package re",
						"Package Control: Remove Package"
					],
					[
						"whocal",
						"WhoCalled: Add/remove project folders"
					],
					[
						"whos",
						"WhoCalled: Add/remove project folders"
					],
					[
						"sni",
						"Snippet: CDATA"
					],
					[
						"ifdef",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"if",
						"Snippet: If Condition"
					],
					[
						"defin",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"goto",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"goto ",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"bookam",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"",
						"About"
					],
					[
						"show ",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"add book",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addboo",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"remove all",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"show",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"showall",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"bookmark",
						"SublimeBookmarks: Show Bookmarks Only In Current File "
					],
					[
						"sublimebook",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"sublimebookmakr",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"book",
						"Bookmarks: Select Next"
					],
					[
						"add",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addb",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"isnt",
						"Package Control: Install Package"
					],
					[
						"Package Control: r",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ins",
						"Package Control: Install Package"
					],
					[
						"sublime se",
						"Preferences: SublimeClang Settings â€“ User"
					],
					[
						"package",
						"Package Control: Install Package"
					],
					[
						"pack",
						"Preferences: Browse Packages"
					],
					[
						"packe",
						"Preferences: Browse Packages"
					]
				],
				"width": 514.0
			},
			"console":
			{
				"height": 414.0,
				"history":
				[
					"displayName",
					"show all command",
					"command",
					"view.encoding()",
					"navigation_history_back",
					"switch_script",
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/jiahao/Git/cbox_mediastack",
				"/home/jiahao/Git/cbox_mediastack/arec_mw"
			],
			"file_history":
			[
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine_live_record.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine_live_record.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamout_hndl.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamout_hndl.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_streamout.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/test.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/interleavingString.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/plusOne.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/isomorphicString.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_action.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_gst_msg_handler.cpp",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_rtmp/gstrtmpsink.c",
				"/home/jiahao/Downloads/buffer_queue_full.log",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/module_list",
				"/home/jiahao/Videos/sample/1_00.txt",
				"/home/jiahao/nfs/sh/liveRtmp.sh",
				"/home/jiahao/nfs/sh/rtmprecive.sh",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/revertString.cpp",
				"/home/jiahao/.kermrc",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/IsomorphicString.cpp",
				"/home/jiahao/nfs/video_player.html",
				"/home/jiahao/tmp/AtomicParsley-source-0.9.0/AtomicParsley-source-0.9.0/build",
				"/home/jiahao/nfs/fix_mp4_moov.sh",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/utility.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/gstreamer_plugin.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/utility.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/cJSON.cpp",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeAStyleFormatter/Default (Linux).sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/dbus_wrapper.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/dbus_wrapper.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/config.h",
				"/home/jiahao/nfs/m_preview.js",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_previewrecord.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_type.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_export.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_builder.cpp",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_streamengine/arec_streamengine.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw_bak/inc/arec_mcfw.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw_bak/inc/arec_type.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_builder.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_mcfw.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/lightweight_mode.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_curl.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/inc/IArecStreamEngine.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/gstreamer_plugin_name.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/inc/ArecStreamEngineData.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/gstelement.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_mcfw.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/Makefile",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/curl/curlrules.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/bits/mathcalls.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/cJSON.h",
				"/home/jiahao/Git/cbox_mediastack/Makefile",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw",
				"/home/jiahao/Git/cbox_mediastack/bin/mw",
				"/home/jiahao/Git/cbox_mediastack/cbox_mediastack.sublime-project",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw/Makefile",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/gstpad.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_ds203.cpp",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test.cpp",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test2.cpp",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test1.h",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test1.cpp",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/netinet/in.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/bits/socket.h",
				"/home/jiahao/Dropbox/InterviewCode/Socket/tcp_server.cpp",
				"/home/jiahao/Dropbox/InterviewCode/Socket/tcp_client.cpp",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/sys/socket.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_playback.cpp",
				"/home/jiahao/Dropbox/InterviewCode/Socket/tcp.cpp",
				"/home/jiahao/TestCode/test.cpp",
				"/home/jiahao/nfs/sh/sftp_upload.sh",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_playback.h",
				"/home/jiahao/Dropbox/InterviewCode/test.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_hv.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_layout_manager.cpp",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/IArecLog.h",
				"/home/jiahao/Downloads/log/messages.0",
				"/home/jiahao/tools/cppcheck-master/readme.txt",
				"/home/jiahao/tools/cppcheck-master/readme.md",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/deleteListNode.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/lowestAncestorTree.cpp",
				"/home/jiahao/nfs/BurnTest/CBOX_SDK_ENV.postman_environment",
				"/home/jiahao/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeClang/Default.sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
				"/home/jiahao/tools/gource-0.43/README",
				"/home/jiahao/.config/sublime-text-3/Packages/JsFormat/JsFormat.sublime-settings",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_streamengine/arec_streamengine.h",
				"/home/jiahao/nfs/JSON/export_mp4_ftp_head_tail.json",
				"/home/jiahao/Downloads/20150715_export_failed.log",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_export.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw/src/mcfw/mcfw_common_chain.c",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/export_mp4.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_action.h",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_curl/gstcurlbasesink.h",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_curl/gstcurlbasesink.c",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/ts_ftp_uploading.json",
				"/home/jiahao/nfs/cbox_env.jhash",
				"/home/jiahao/nfs/S40network",
				"/home/jiahao/nfs/S10shellinabox",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_command_parser.cpp",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_rtsp/gstrtspsrc.c",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_rtp/gstrtph264depay.cpp",
				"/media/jiahao/8baf3a9d-3c39-4404-9283-485e919be9ee/_fw_modify.sh",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/[preview_director_record_filesrc]protocol.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/[preview_director_record]protocol.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/get_module_build_server.py",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/get_module.py",
				"/home/jiahao/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw/inc/arec_type.h",
				"/home/jiahao/nfs/sh/rtpTest.sh",
				"/home/jiahao/Videos/sample/Avengers_00.txt",
				"/home/jiahao/nfs/director_bak_00.txt",
				"/home/jiahao/tmp/normal_director.log",
				"/home/jiahao/tmp/slow_director.log",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_curl/gstcurlsftpsink.c",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_mediadetect.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_command_parser.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/gstformat.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_curl.h"
			],
			"find":
			{
				"height": 40.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"~/Git/cbox_mediastack/",
					"~/Git/cbox_mediastack/arec_mw",
					"~/Git/cbox_mediastack/",
					"~/Git/cbox_mediastack/arec_mw/",
					"~/Git/cbox_mediastack/",
					"/home/jiahao/Git/cbox_medistack",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/Release.sh",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_pulse",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_plugin",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.c",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.cpp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtspserver/",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Templates/cbox_os/arec_fs/arec/2014_08_15_15_35_28/minicom.cap",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CUdpToFile/test00000_00.txt",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/isomp4/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Git/msr13/",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"release streamengine",
					"(index maybe loss) ",
					"RTMP send timeout",
					"vpts",
					"dts",
					"vdts",
					"pts",
					"    ",
					"  ",
					"09",
					"000",
					"    ",
					"Edit1 attachment(s) ",
					"directstreaming_tsmux",
					"isInterleave",
					".erase(0, 1)",
					"i",
					"[i]",
					"sMap",
					"atoi",
					"iter",
					"ERROR(export):",
					"m_stream_rtmp_bin",
					"m_videoFakesink",
					"m_vTee",
					"fakesink",
					"TEE",
					"tee",
					"VIDEO_DIR",
					"_handle_streamengine_msg",
					"msg from streamengine",
					"HeaderSize",
					"Bit rate",
					"VBR",
					"General",
					"Time",
					"first video frame time:",
					"gst_bus_timed_pop_filtered",
					"gst_ghost_pad_new",
					"gst_element_sync_state_with",
					"gst_element_sync_with_parent",
					"sync",
					"eSE_Done_ErrorAbort",
					"_handle_streamengine_msg",
					"handle_mux_thread",
					"ht_record_event_ptr",
					"send_ht_record_event",
					"stream engine stop callback",
					"msg from streamengine",
					"switch",
					"_handle_streamengine_msg",
					"transcode head or tail end",
					"mp4 record-pause",
					"aqueue",
					"capsfilter",
					"QTMUX",
					"arec_qtmux",
					"QTMUX",
					"arec_qtmux",
					"resume",
					"recordJSON",
					"cJSON_GetObjectItem",
					"GetObjectItem",
					"dbus_wrapper_receive",
					"_dbus_wrapper",
					"mpegtsmux",
					"has resource file in capture channel",
					"has resource file in capture channel:",
					"enter streaming engine handling",
					"dbus_wrapper_receive",
					"has resource file in capture channel",
					"SET_USE_MULTIFILESINK",
					"Pause",
					"cb_event",
					"Resume",
					"CData->streamengine_live_record_hndl->",
					"tee",
					"SET_AUDIO_SHIFT",
					"Time code miss 1 sec",
					"TSMUX",
					"director",
					".h",
					"mcfw_vcap",
					"include",
					"mcfw_vcap",
					"capsfilter_audio",
					"p_aacparse",
					"p_identity",
					"capsfilter_audio",
					"from element directstreaming_tsmux",
					"identity",
					"g_signal_connect",
					"// g_signal_connect (pipeline, \"deep-notify\", G_CALLBACK(gst_object_default_deep_notify), NULL);",
					"identity",
					"signal",
					"streaming_mux",
					"capsfilter_audio",
					"SyncPlayerStream",
					"sync",
					"_preview_record",
					"aacparse",
					"p_aacparse",
					"adts",
					"diff",
					"mw is not in recording",
					"stop main pipeline",
					"streamengine_error",
					"PreviewRecord",
					"release streamengine",
					"m_video_input_ptr",
					"export",
					"mp4_record",
					"record_mp4",
					"export",
					"fksink",
					"m_video_fakesink",
					"SetInputSinkByMainPipe",
					"setSEInputFunc",
					"m_video_input_ptr",
					"GetVideoInputPtrForCapEnc",
					"lightweight_mode",
					"SetInputSinkByMainPipe",
					"mp4_record",
					"record_mp4",
					"get eos message",
					"get eos message(streamengine)",
					"movie record to",
					"release streamengine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"CData->q_info.count_down_start_time",
					"DIRECTSTREAMING_TSMUX",
					".",
					""
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "arec_mw/mw_action.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 111112,
								"regions":
								{
								},
								"selection":
								[
									[
										58531,
										58531
									]
								],
								"settings":
								{
									"BracketHighlighterBusy": false,
									"bh_regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										223,
										8,
										24,
										17,
										53,
										30,
										0,
										0,
										0,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C++.tmLanguage",
									"syntax_mgr_loaded": true,
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 30060.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "arec_mw/mw_streamengine_live_record.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 18628,
								"regions":
								{
								},
								"selection":
								[
									[
										11631,
										11631
									]
								],
								"settings":
								{
									"BracketHighlighterBusy": false,
									"bh_regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										223,
										8,
										24,
										17,
										53,
										30,
										0,
										0,
										0,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C++.tmLanguage",
									"syntax_mgr_loaded": true,
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 6826.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 552,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												349,
												369
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										367,
										367
									]
								],
								"settings":
								{
									"BracketHighlighterBusy": false,
									"bh_regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content"
									],
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 1,
									"result_base_dir": "",
									"result_file_regex": "^([A-Za-z\\\\/<].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "arec_mw/mw.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3132,
								"regions":
								{
								},
								"selection":
								[
									[
										663,
										663
									]
								],
								"settings":
								{
									"BracketHighlighterBusy": false,
									"bh_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										223,
										8,
										24,
										17,
										53,
										30,
										0,
										0,
										0,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C++.tmLanguage",
									"syntax_mgr_loaded": true,
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 564.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 30.0
			},
			"input":
			{
				"height": 38.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.clang":
			{
				"height": 213.0
			},
			"output.exec":
			{
				"height": 144.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,73,24,1920,1052,1920,1080",
			"project": "cbox_mediastack.sublime-project",
			"replace":
			{
				"height": 56.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"mw_acti",
						"arec_mw/mw_action.cpp"
					],
					[
						"gstrtmpsink",
						"sw_plugin/arec_rtmp/gstrtmpsink.c"
					],
					[
						"mw_ac",
						"arec_mw/mw_action.cpp"
					],
					[
						"mw.c",
						"arec_mw/mw.cpp"
					],
					[
						"mw_live_",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw_stream",
						"arec_mw/mw_streamout_hndl.h"
					],
					[
						"streamout",
						"arec_mw/graph_streamout.cpp"
					],
					[
						"mw_action",
						"arec_mw/mw_action.cpp"
					],
					[
						"live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"arec_type.h",
						"arec_mcfw_bak/inc/arec_type.h"
					],
					[
						"arec_mcfw.h",
						"arec_mcfw_bak/inc/arec_mcfw.h"
					],
					[
						"graph_builder.cpp",
						"arec_mw/graph_builder.cpp"
					],
					[
						"graph_builder.h",
						"arec_mw/graph_builder.h"
					],
					[
						"gstreamer_plugin.cpp",
						"arec_mw/gstreamer_plugin.cpp"
					],
					[
						"mw_mcfw.h",
						"arec_mw/mw_mcfw.h"
					],
					[
						"mw.cpp",
						"arec_mw/mw.cpp"
					],
					[
						"graph",
						"arec_mw/graph_builder.cpp"
					],
					[
						"mw_strout",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"lig",
						"arec_mw/JSON/lightweight_mode.json"
					],
					[
						"live_",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw.cp",
						"arec_mw/mw.cpp"
					],
					[
						"action",
						"arec_mw/mw_action.cpp"
					],
					[
						"modu",
						"arec_mw/module_tool/module_list"
					],
					[
						"graph_expo",
						"arec_mw/graph_export.cpp"
					],
					[
						"mw_action.cpp",
						"arec_mw/mw_action.cpp"
					],
					[
						"mw.",
						"arec_mw/mw.cpp"
					],
					[
						"mw_str",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"arec_streamengine.cpp",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"make",
						"arec_mcfw/Makefile"
					],
					[
						"makefile",
						"Makefile"
					],
					[
						"rtmpsink",
						"sw_plugin/arec_rtmp/gstrtmpsink.c"
					],
					[
						"graph_bu",
						"arec_mw/graph_builder.cpp"
					],
					[
						"mw/make",
						"arec_mw/Makefile"
					],
					[
						"streamount",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"grap",
						"arec_mw/graph_builder.cpp"
					],
					[
						"graph_build",
						"arec_mw/graph_builder.cpp"
					],
					[
						"mw_streamout_hndl.cpp",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"graph_play",
						"arec_mw/graph_playback.cpp"
					],
					[
						"playback",
						"arec_mw/graph_playback.cpp"
					],
					[
						"dbus_wrapper.cpp",
						"arec_mw/dbus_wrapper.cpp"
					],
					[
						"mw_streamengine_live_record.cpp",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw_mcfw.cpp",
						"arec_mw/mw_mcfw.cpp"
					],
					[
						"mw_gst_msg_handler.cpp",
						"arec_mw/mw_gst_msg_handler.cpp"
					],
					[
						"graph_playback.cpp",
						"arec_mw/graph_playback.cpp"
					],
					[
						"arec_mw/makefile",
						"arec_mw/Makefile"
					],
					[
						"mw_streamengine_live_record.h",
						"arec_mw/mw_streamengine_live_record.h"
					],
					[
						"mw_streamout_hndl.h",
						"arec_mw/mw_streamout_hndl.h"
					],
					[
						"graph_hv.h",
						"arec_mw/graph_hv.h"
					],
					[
						"graph_previewrecord.cpp",
						"arec_mw/graph_previewrecord.cpp"
					],
					[
						"areclog",
						"cbox_sdk/linux_devkit/usr/include/IArecLog.h"
					],
					[
						"utility.h",
						"arec_mw/utility.h"
					],
					[
						"graph_ds203.cpp",
						"arec_mw/graph_ds203.cpp"
					],
					[
						"mw_layout_manager.cpp",
						"arec_mw/mw_layout_manager.cpp"
					],
					[
						"mw_streamout",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"arec_streamout",
						"arec_mw/graph_streamout.cpp"
					],
					[
						"mw_strmout",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"arec_str",
						"sw_plugin/arec_streamengine/arec_streamengine.h"
					],
					[
						"mw_sterm",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"export_",
						"arec_mw/JSON/export_mp4.json"
					],
					[
						"module",
						"arec_mw/module_tool/module_list"
					],
					[
						"mw_sr",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw_strm",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"arec_uplo",
						"arec_mw/JSON/ts_ftp_uploading.json"
					],
					[
						"gstcurl",
						"sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"mw_actin",
						"arec_mw/mw_action.cpp"
					],
					[
						"graph_export",
						"arec_mw/graph_export.cpp"
					],
					[
						"mw_streamengine_live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"streamhld",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"gstrtspsrc.c",
						"sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"strea",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"",
						"arec_mw/mw_gst_msg_handler.cpp"
					],
					[
						"mw_acit",
						"arec_mw/mw_action.cpp"
					],
					[
						"gstrtph264de",
						"sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"grap_buil",
						"arec_mw/graph_builder.cpp"
					],
					[
						"get_module_build_server.py",
						"arec_mw/module_tool/get_module_build_server.py"
					],
					[
						"get_modu",
						"arec_mw/module_tool/get_module.py"
					],
					[
						"arec_strm",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"graph_buil",
						"arec_mw/graph_builder.cpp"
					],
					[
						"gstcurlbasesink.c",
						"sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"mw_stri",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"stream_hd",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"streamhd",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"mw_live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"curlbasesink",
						"sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"curlsftpsin",
						"sw_plugin/arec_curl/gstcurlsftpsink.c"
					],
					[
						"graph_export.cpp",
						"arec_mw/graph_export.cpp"
					],
					[
						"mw_aciton",
						"arec_mw/mw_action.cpp"
					],
					[
						"mw/makefi",
						"arec_mw/Makefile"
					],
					[
						"export_mp4",
						"arec_mw/JSON/[export_mp4_ftp]protocol.json"
					],
					[
						"export_mp4_ftp",
						"arec_mw/JSON/[export_mp4_ftp]protocol.json"
					],
					[
						"gstrtmp",
						"sw_plugin/arec_rtmp/gstrtmp.c"
					],
					[
						"mw_ction",
						"arec_mw/mw_action.cpp"
					],
					[
						"arec_rtsp",
						"arec_mw/test_code/test_gstrtspserver/arec_rtspserver.c"
					],
					[
						"rtspserver",
						"arec_mw/test_code/test_gstrtspserver/arec_rtspserver"
					],
					[
						"mw_actiojn",
						"arec_mw/JSON/test_action.json"
					],
					[
						"mw_stream_live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"gst_info.h",
						"arec_mw/inc/mpegtsmux_info.h"
					],
					[
						"mw_streami",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"arec_streamgindata",
						"arec_mw/inc/ArecStreamEngineData.h"
					],
					[
						"iarecstreamengine.h",
						"arec_mw/inc/IArecStreamEngine.h"
					],
					[
						"iarecstreamengine",
						"arec_mw/inc/IArecStreamEngine.h"
					],
					[
						"json",
						"arec_mw/cJSON.cpp"
					],
					[
						"mw_strem_hd",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"gstflvmux",
						"sw_plugin/arec_flv/gstflvmux.c"
					],
					[
						"uti",
						"arec_mw/utility.h"
					],
					[
						"mw.h",
						"arec_mw/mw.h"
					],
					[
						"mw_steamout_hndl",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"export_ftp",
						"arec_mw/JSON/export_mp4_ftp.json"
					],
					[
						"export.json",
						"arec_mw/JSON/export_mp4.json"
					],
					[
						"mw_xml_export.cpp",
						"arec_mw/mw_xml_export.cpp"
					],
					[
						"gstalsasink",
						"sw_plugin/alsa/gstalsasink.c"
					],
					[
						"gstqtmux",
						"sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"gstrtpjitter",
						"sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"iarec",
						"sw_plugin/arec_streamengine/IArecStreamEngine.h"
					],
					[
						"mw_streamengine.cpp",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"arec_strem",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_stream",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"mcfw/mcfw_event.h",
						"arec_mcfw/src/mcfw/mcfw_event.h"
					],
					[
						"src/arec_mcfw.c",
						"arec_mcfw/src/arec_mcfw.c"
					],
					[
						"arec_com/src/makefile",
						"arec_com/src/Makefile"
					],
					[
						"src/mcfw/mcfw_event.h",
						"arec_mcfw/src/mcfw/mcfw_event.h"
					],
					[
						"protoc",
						"arec_mw/protocol_ui.cpp"
					],
					[
						"arec_medi",
						"testbed/arec_mediadetect_testbed/arec_mediadetect_testbed.cpp"
					],
					[
						"graph_rec",
						"arec_mw/graph_previewrecord.cpp"
					],
					[
						"dyn",
						"arec_mw/JSON/dynamic_multi_mp4.json"
					],
					[
						"record",
						"arec_mw/JSON/mp4_record.json"
					],
					[
						"msg_",
						"arec_mw/mw_gst_msg_handler.cpp"
					],
					[
						"dbus_ha",
						"arec_mw/dbus_wrapper.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"arec",
						"~/Git/arec_ct/arec_ct.sublime-project"
					],
					[
						"gstrea",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"gui",
						"~/Git/msrgui/msrgui.sublime-project"
					],
					[
						"gstream",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msr13",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"rtsp",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"rts",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msrgst",
						"~/Git/msrgst/msrgst.sublime-project"
					],
					[
						"m3",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"gst",
						"~/Git/msrgst/msrgst.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 482.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 386.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 455,
			"workspace_name": "/home/jiahao/Git/cbox_mediastack/cbox_mediastack.sublime-workspace"
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"isInterle",
						"isInterleaveDecide(string s1, string s2, string s3)	bool"
					],
					[
						"isInter",
						"isInterleaveDecide(string s1, string s2, string s3)	bool"
					],
					[
						"sub",
						"subs3	string"
					],
					[
						"p",
						"push_back(value_type &&__x)	void"
					],
					[
						"string",
						"stringstream"
					],
					[
						"map",
						"map<typename _Key, typename _Tp>	class"
					],
					[
						"is_app",
						"is_append_tail	bool"
					],
					[
						"is",
						"is_append_tail	bool"
					],
					[
						"is_ap",
						"is_append_tail	bool"
					],
					[
						"co",
						"pre_count_down	double"
					],
					[
						"ser",
						"server_reply	char[][]"
					],
					[
						"socket",
						"socket(int __domain, int __type, int __protocol)	int"
					],
					[
						"file",
						"file_par	FileParameter"
					],
					[
						"m",
						"media_state	MediaState"
					],
					[
						"cou",
						"count_down_freeze_times	int"
					],
					[
						"MEDIA_STATE_RE",
						"MEDIA_STATE_RECORD	MediaState"
					],
					[
						"pr",
						"privkey	char *"
					],
					[
						"retrieve",
						"retrieve_json_string(cJSON *rootJSON, const char *field_name)	char *"
					],
					[
						"stop",
						"stopRtpGraph()	void"
					],
					[
						"pP",
						"pPush_param	void *"
					],
					[
						"VIDO",
						"VIDEOINPUTPTR	typedef"
					],
					[
						"stream",
						"streaming_mux	GstElement *"
					],
					[
						"streamen",
						"streamengine_live_record_hndl	CLiveRecordBySEHandler *"
					],
					[
						"Get",
						"GetParamValue(int ParamType, void *pData)	eSEStatus"
					],
					[
						"stea",
						"streamengine_live_record_hndl	CLiveRecordBySEHandler *"
					],
					[
						"Is",
						"GetIsPostErr()	bool"
					],
					[
						"gst_obje",
						"gst_object_unref(gpointer object)	void"
					],
					[
						"gst_obj",
						"gst_object_ref(gpointer object)	gpointer"
					],
					[
						"loca",
						"location_name	char[]"
					],
					[
						"retr",
						"retrieve_json_string(cJSON *rootJSON, const char *field_name)	char *"
					],
					[
						"str",
						"streamengine_live_record_hndl	CLiveRecordBySEHandler *"
					],
					[
						"MW_MD_",
						"MW_MD_OK	enum <anonymous>"
					],
					[
						"_medai",
						"_mediadetect_release(MW_MediaDetect_Prm *mediadetect_prm)	void"
					],
					[
						"GST_FLOW",
						"GST_FLOW_OK	GstFlowReturn"
					],
					[
						"push",
						"push_base_time	gint64 [16]"
					],
					[
						"curre",
						"current_push_time	gint64"
					],
					[
						"gt",
						"GetSampleCounts()	int"
					],
					[
						"de",
						"p_data_queue	DataQueue *"
					],
					[
						"current",
						"current_time_diff	guint64"
					],
					[
						"base",
						"base_pts	gint64"
					],
					[
						"audio_pts",
						"audio_base_pts	gint64"
					],
					[
						"PROP",
						"PROP_DELAY_DROP_TIME	enum <anonymous>"
					],
					[
						"current_time",
						"current_time_diff"
					],
					[
						"video_base",
						"video_base_pts	guint64"
					],
					[
						"GST_CL",
						"GST_CLOCK	macro"
					],
					[
						"video_base_",
						"video_base_current_time	guint64"
					],
					[
						"pre_",
						"audio_pre_current_time	guint64"
					],
					[
						"buff",
						"buff_time_diff	guint64"
					],
					[
						"curren",
						"current_time_diff	guint64"
					],
					[
						"pre",
						"pre_current_time	guint64"
					],
					[
						"LIVE",
						"LIVE_SYNC_LOW_THRESHOLD	macro"
					],
					[
						"SYNC_",
						"SYNC_LOW_THRESHOLD	macro"
					],
					[
						"moov",
						"moov_recov_file_path	gchar *"
					],
					[
						"tr",
						"trak	AtomTRAK *"
					],
					[
						"fclose",
						"fclose(FILE *__stream)	int"
					],
					[
						"sa",
						"sample_count	int"
					],
					[
						"pad",
						"pad_mix_info	PAD_MIX_INFO[]"
					],
					[
						"GST_OK",
						"GST_FLOW_OK	GstFlowReturn"
					],
					[
						"pedn",
						"pending_events_mutex	pthread_mutex_t"
					],
					[
						"pend",
						"pending_events_mutex	pthread_mutex_t"
					],
					[
						"PTHREAD_MU",
						"PTHREAD_MUTEX_INITIALIZER	macro"
					],
					[
						"MIN_THR",
						"MIN_THROSHOLD_FOR_RECORD	macro"
					],
					[
						"is_",
						"is_empty_pad	gboolean [16]"
					],
					[
						"re",
						"is_record	gboolean"
					],
					[
						"TIME",
						"GST_FORMAT_TIME"
					],
					[
						"watit",
						"p_cond_wait_data	ArecCond *"
					],
					[
						"curr",
						"currMixIndex	gint64"
					],
					[
						"MIX_",
						"MIX_NUMBER_NULL	macro"
					],
					[
						"buffer",
						"buffer_threshold	int"
					],
					[
						"get",
						"GetLastIndex()	gint64"
					],
					[
						"INDEX_",
						"INDEX_WAIT_FOR_DATA	MIX_INDEX_ACTION"
					],
					[
						"INDE",
						"INDEX_READY_FOR_PUSH_DATA	MIX_INDEX_ACTION"
					],
					[
						"PAD_",
						"PAD_HAS_DATA_CAN_PUSH	PAD_STATUS"
					],
					[
						"cu",
						"currMixIndex	gint64"
					],
					[
						"GST_E",
						"GST_EVENT	macro"
					],
					[
						"pthread_destroy",
						"pthread_mutex_destroy(pthread_mutex_t *__mutex)	int"
					],
					[
						"pthread_init",
						"pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr)	int"
					],
					[
						"CURRENT_SAM",
						"CURRENT_SMALL_TAHN_ONE_PAD	MIX_INDEX_ACTION"
					],
					[
						"CURR",
						"CURRENT_EQUAL_TO_ONE_PAD	MIX_INDEX_ACTION"
					],
					[
						"CURRENT",
						"CURRENT_EQUAL_TO_ONE_PAD	MIX_INDEX_ACTION"
					],
					[
						"d",
						"duration	GstClockTime"
					],
					[
						"guint",
						"guint64	typedef"
					],
					[
						"gint",
						"gint64	typedef"
					],
					[
						"had",
						"has_data"
					],
					[
						"GST_CLOCKE",
						"GST_CLOCK_TIME_NONE"
					],
					[
						"GST_TIME",
						"GST_FORMAT_TIME"
					],
					[
						"vid",
						"video_frame_time	int"
					],
					[
						"PROP_CONST",
						"PROP_CONSTANT_VIDEO_TIME	enum <anonymous>"
					],
					[
						"PROP_CON",
						"PROP_CONSTANT_VIDEO_FRAME_TIME	enum <anonymous>"
					],
					[
						"video",
						"video_frame_time	guint"
					],
					[
						"g_strd",
						"g_strdup(const gchar *str)	gchar *"
					],
					[
						"LI",
						"LINDEX_"
					],
					[
						"LOG_DBG",
						"LOG_PDBG	macro"
					],
					[
						"Set",
						"SetSecOfM3u8(int nSecOfM3u8)	void"
					],
					[
						"set",
						"SetSecOfM3u8(int nSecOfM3u8)	void"
					],
					[
						"pRtp",
						"pRtpQueue	GstElement*"
					],
					[
						"Log",
						"Log(const int priority, const char *message, ...)	void"
					],
					[
						"m_rid",
						"m_ridLiveTypeMap	std::map<int, int>"
					],
					[
						"Conv",
						"ConvertToStr(T value)	STDSTR"
					],
					[
						"ran",
						"random()	long"
					],
					[
						"link",
						"linkTeeAndElement(GstElement *pTee, GstElement *pElement)	ARESULT"
					],
					[
						"ARE",
						"AREC_SUCCESS	macro"
					],
					[
						"crea",
						"createElement(const STDSTR &strElementName, const STDSTR &strGivenName, GstElement **ppElement)	ARESULT"
					],
					[
						"Conver",
						"ConvertStrTo<typename T>(STDSTR str)	T"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/jiahao/tmp/log/messages",
					"settings":
					{
						"buffer_size": 178624,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 375.0,
				"last_filter": "remove",
				"selected_items":
				[
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"who",
						"WhoCalled: Run indexer"
					],
					[
						"package re",
						"Package Control: Remove Package"
					],
					[
						"whocal",
						"WhoCalled: Add/remove project folders"
					],
					[
						"whos",
						"WhoCalled: Add/remove project folders"
					],
					[
						"sni",
						"Snippet: CDATA"
					],
					[
						"ifdef",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"if",
						"Snippet: If Condition"
					],
					[
						"defin",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"goto",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"goto ",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"bookam",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"",
						"About"
					],
					[
						"show ",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"add book",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addboo",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"remove all",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"show",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"showall",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"bookmark",
						"SublimeBookmarks: Show Bookmarks Only In Current File "
					],
					[
						"sublimebook",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"sublimebookmakr",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"book",
						"Bookmarks: Select Next"
					],
					[
						"add",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addb",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"isnt",
						"Package Control: Install Package"
					],
					[
						"Package Control: r",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ins",
						"Package Control: Install Package"
					],
					[
						"sublime se",
						"Preferences: SublimeClang Settings â€“ User"
					],
					[
						"package",
						"Package Control: Install Package"
					],
					[
						"pack",
						"Preferences: Browse Packages"
					],
					[
						"packe",
						"Preferences: Browse Packages"
					]
				],
				"width": 514.0
			},
			"console":
			{
				"height": 414.0,
				"history":
				[
					"displayName",
					"show all command",
					"command",
					"view.encoding()",
					"navigation_history_back",
					"switch_script",
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/jiahao/tmp/log"
			],
			"file_history":
			[
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine_live_record.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine_live_record.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamout_hndl.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamout_hndl.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_streamout.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/test.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/interleavingString.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/plusOne.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/isomorphicString.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_action.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_gst_msg_handler.cpp",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_rtmp/gstrtmpsink.c",
				"/home/jiahao/Downloads/buffer_queue_full.log",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/module_list",
				"/home/jiahao/Videos/sample/1_00.txt",
				"/home/jiahao/nfs/sh/liveRtmp.sh",
				"/home/jiahao/nfs/sh/rtmprecive.sh",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/revertString.cpp",
				"/home/jiahao/.kermrc",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/IsomorphicString.cpp",
				"/home/jiahao/nfs/video_player.html",
				"/home/jiahao/tmp/AtomicParsley-source-0.9.0/AtomicParsley-source-0.9.0/build",
				"/home/jiahao/nfs/fix_mp4_moov.sh",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/utility.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/gstreamer_plugin.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/utility.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/cJSON.cpp",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeAStyleFormatter/Default (Linux).sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/dbus_wrapper.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/dbus_wrapper.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/config.h",
				"/home/jiahao/nfs/m_preview.js",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_previewrecord.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_type.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_export.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_builder.cpp",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_streamengine/arec_streamengine.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw_bak/inc/arec_mcfw.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw_bak/inc/arec_type.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_builder.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_mcfw.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/lightweight_mode.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_curl.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/inc/IArecStreamEngine.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_streamengine.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/gstreamer_plugin_name.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/inc/ArecStreamEngineData.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/gstelement.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_mcfw.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/Makefile",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/curl/curlrules.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/bits/mathcalls.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/cJSON.h",
				"/home/jiahao/Git/cbox_mediastack/Makefile",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw",
				"/home/jiahao/Git/cbox_mediastack/bin/mw",
				"/home/jiahao/Git/cbox_mediastack/cbox_mediastack.sublime-project",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw/Makefile",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/gstpad.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_ds203.cpp",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test.cpp",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test2.cpp",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test1.h",
				"/home/jiahao/Dropbox/InterviewCode/TestCode/test1.cpp",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/netinet/in.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/bits/socket.h",
				"/home/jiahao/Dropbox/InterviewCode/Socket/tcp_server.cpp",
				"/home/jiahao/Dropbox/InterviewCode/Socket/tcp_client.cpp",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/sys/socket.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_playback.cpp",
				"/home/jiahao/Dropbox/InterviewCode/Socket/tcp.cpp",
				"/home/jiahao/TestCode/test.cpp",
				"/home/jiahao/nfs/sh/sftp_upload.sh",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_playback.h",
				"/home/jiahao/Dropbox/InterviewCode/test.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_hv.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_layout_manager.cpp",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/IArecLog.h",
				"/home/jiahao/Downloads/log/messages.0",
				"/home/jiahao/tools/cppcheck-master/readme.txt",
				"/home/jiahao/tools/cppcheck-master/readme.md",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/deleteListNode.cpp",
				"/home/jiahao/Dropbox/InterviewCode/LeetCode/lowestAncestorTree.cpp",
				"/home/jiahao/nfs/BurnTest/CBOX_SDK_ENV.postman_environment",
				"/home/jiahao/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/SublimeClang/Default.sublime-keymap",
				"/home/jiahao/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
				"/home/jiahao/tools/gource-0.43/README",
				"/home/jiahao/.config/sublime-text-3/Packages/JsFormat/JsFormat.sublime-settings",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_streamengine/arec_streamengine.h",
				"/home/jiahao/nfs/JSON/export_mp4_ftp_head_tail.json",
				"/home/jiahao/Downloads/20150715_export_failed.log",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_export.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw/src/mcfw/mcfw_common_chain.c",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/export_mp4.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_action.h",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_curl/gstcurlbasesink.h",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_curl/gstcurlbasesink.c",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/ts_ftp_uploading.json",
				"/home/jiahao/nfs/cbox_env.jhash",
				"/home/jiahao/nfs/S40network",
				"/home/jiahao/nfs/S10shellinabox",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_command_parser.cpp",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_rtsp/gstrtspsrc.c",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_rtp/gstrtph264depay.cpp",
				"/media/jiahao/8baf3a9d-3c39-4404-9283-485e919be9ee/_fw_modify.sh",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/[preview_director_record_filesrc]protocol.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/[preview_director_record]protocol.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/get_module_build_server.py",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/get_module.py",
				"/home/jiahao/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/jiahao/Git/cbox_mediastack/arec_mcfw/inc/arec_type.h",
				"/home/jiahao/nfs/sh/rtpTest.sh",
				"/home/jiahao/Videos/sample/Avengers_00.txt",
				"/home/jiahao/nfs/director_bak_00.txt",
				"/home/jiahao/tmp/normal_director.log",
				"/home/jiahao/tmp/slow_director.log",
				"/home/jiahao/Git/cbox_mediastack/sw_plugin/arec_curl/gstcurlsftpsink.c",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_mediadetect.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_command_parser.h",
				"/home/jiahao/Git/cbox_mediastack/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/gstformat.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/mw_curl.h"
			],
			"find":
			{
				"height": 30.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"~/Git/cbox_mediastack/",
					"~/Git/cbox_mediastack/arec_mw",
					"~/Git/cbox_mediastack/",
					"~/Git/cbox_mediastack/arec_mw/",
					"~/Git/cbox_mediastack/",
					"/home/jiahao/Git/cbox_medistack",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/Release.sh",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_pulse",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_plugin",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.c",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.cpp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtspserver/",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Templates/cbox_os/arec_fs/arec/2014_08_15_15_35_28/minicom.cap",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CUdpToFile/test00000_00.txt",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/isomp4/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Git/msr13/",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"release streamengine",
					"(index maybe loss) ",
					"RTMP send timeout",
					"vpts",
					"dts",
					"vdts",
					"pts",
					"    ",
					"  ",
					"09",
					"000",
					"    ",
					"Edit1 attachment(s) ",
					"directstreaming_tsmux",
					"isInterleave",
					".erase(0, 1)",
					"i",
					"[i]",
					"sMap",
					"atoi",
					"iter",
					"ERROR(export):",
					"m_stream_rtmp_bin",
					"m_videoFakesink",
					"m_vTee",
					"fakesink",
					"TEE",
					"tee",
					"VIDEO_DIR",
					"_handle_streamengine_msg",
					"msg from streamengine",
					"HeaderSize",
					"Bit rate",
					"VBR",
					"General",
					"Time",
					"first video frame time:",
					"gst_bus_timed_pop_filtered",
					"gst_ghost_pad_new",
					"gst_element_sync_state_with",
					"gst_element_sync_with_parent",
					"sync",
					"eSE_Done_ErrorAbort",
					"_handle_streamengine_msg",
					"handle_mux_thread",
					"ht_record_event_ptr",
					"send_ht_record_event",
					"stream engine stop callback",
					"msg from streamengine",
					"switch",
					"_handle_streamengine_msg",
					"transcode head or tail end",
					"mp4 record-pause",
					"aqueue",
					"capsfilter",
					"QTMUX",
					"arec_qtmux",
					"QTMUX",
					"arec_qtmux",
					"resume",
					"recordJSON",
					"cJSON_GetObjectItem",
					"GetObjectItem",
					"dbus_wrapper_receive",
					"_dbus_wrapper",
					"mpegtsmux",
					"has resource file in capture channel",
					"has resource file in capture channel:",
					"enter streaming engine handling",
					"dbus_wrapper_receive",
					"has resource file in capture channel",
					"SET_USE_MULTIFILESINK",
					"Pause",
					"cb_event",
					"Resume",
					"CData->streamengine_live_record_hndl->",
					"tee",
					"SET_AUDIO_SHIFT",
					"Time code miss 1 sec",
					"TSMUX",
					"director",
					".h",
					"mcfw_vcap",
					"include",
					"mcfw_vcap",
					"capsfilter_audio",
					"p_aacparse",
					"p_identity",
					"capsfilter_audio",
					"from element directstreaming_tsmux",
					"identity",
					"g_signal_connect",
					"// g_signal_connect (pipeline, \"deep-notify\", G_CALLBACK(gst_object_default_deep_notify), NULL);",
					"identity",
					"signal",
					"streaming_mux",
					"capsfilter_audio",
					"SyncPlayerStream",
					"sync",
					"_preview_record",
					"aacparse",
					"p_aacparse",
					"adts",
					"diff",
					"mw is not in recording",
					"stop main pipeline",
					"streamengine_error",
					"PreviewRecord",
					"release streamengine",
					"m_video_input_ptr",
					"export",
					"mp4_record",
					"record_mp4",
					"export",
					"fksink",
					"m_video_fakesink",
					"SetInputSinkByMainPipe",
					"setSEInputFunc",
					"m_video_input_ptr",
					"GetVideoInputPtrForCapEnc",
					"lightweight_mode",
					"SetInputSinkByMainPipe",
					"mp4_record",
					"record_mp4",
					"get eos message",
					"get eos message(streamengine)",
					"movie record to",
					"release streamengine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"CData->q_info.count_down_start_time",
					"DIRECTSTREAMING_TSMUX",
					".",
					""
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/jiahao/tmp/log"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/jiahao/tmp/log/messages",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 178624,
								"regions":
								{
								},
								"selection":
								[
									[
										66955,
										66955
									]
								],
								"settings":
								{
									"BracketHighlighterBusy": false,
									"bh_regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										223,
										9,
										4,
										9,
										36,
										28,
										0,
										0,
										0,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"origin_encoding": "UTF-8",
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"syntax_mgr_loaded": true
								},
								"translation.x": 0.0,
								"translation.y": 11811.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 30.0
			},
			"input":
			{
				"height": 38.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.clang":
			{
				"height": 213.0
			},
			"output.exec":
			{
				"height": 144.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,73,24,1920,1052,1920,1080",
			"project": "",
			"replace":
			{
				"height": 56.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"message",
						"messages"
					],
					[
						"mw_acti",
						"arec_mw/mw_action.cpp"
					],
					[
						"gstrtmpsink",
						"sw_plugin/arec_rtmp/gstrtmpsink.c"
					],
					[
						"mw_ac",
						"arec_mw/mw_action.cpp"
					],
					[
						"mw.c",
						"arec_mw/mw.cpp"
					],
					[
						"mw_live_",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw_stream",
						"arec_mw/mw_streamout_hndl.h"
					],
					[
						"streamout",
						"arec_mw/graph_streamout.cpp"
					],
					[
						"mw_action",
						"arec_mw/mw_action.cpp"
					],
					[
						"live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"arec_type.h",
						"arec_mcfw_bak/inc/arec_type.h"
					],
					[
						"arec_mcfw.h",
						"arec_mcfw_bak/inc/arec_mcfw.h"
					],
					[
						"graph_builder.cpp",
						"arec_mw/graph_builder.cpp"
					],
					[
						"graph_builder.h",
						"arec_mw/graph_builder.h"
					],
					[
						"gstreamer_plugin.cpp",
						"arec_mw/gstreamer_plugin.cpp"
					],
					[
						"mw_mcfw.h",
						"arec_mw/mw_mcfw.h"
					],
					[
						"mw.cpp",
						"arec_mw/mw.cpp"
					],
					[
						"graph",
						"arec_mw/graph_builder.cpp"
					],
					[
						"mw_strout",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"lig",
						"arec_mw/JSON/lightweight_mode.json"
					],
					[
						"live_",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw.cp",
						"arec_mw/mw.cpp"
					],
					[
						"action",
						"arec_mw/mw_action.cpp"
					],
					[
						"modu",
						"arec_mw/module_tool/module_list"
					],
					[
						"graph_expo",
						"arec_mw/graph_export.cpp"
					],
					[
						"mw_action.cpp",
						"arec_mw/mw_action.cpp"
					],
					[
						"mw.",
						"arec_mw/mw.cpp"
					],
					[
						"mw_str",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"arec_streamengine.cpp",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"make",
						"arec_mcfw/Makefile"
					],
					[
						"makefile",
						"Makefile"
					],
					[
						"rtmpsink",
						"sw_plugin/arec_rtmp/gstrtmpsink.c"
					],
					[
						"graph_bu",
						"arec_mw/graph_builder.cpp"
					],
					[
						"mw/make",
						"arec_mw/Makefile"
					],
					[
						"streamount",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"grap",
						"arec_mw/graph_builder.cpp"
					],
					[
						"graph_build",
						"arec_mw/graph_builder.cpp"
					],
					[
						"mw_streamout_hndl.cpp",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"graph_play",
						"arec_mw/graph_playback.cpp"
					],
					[
						"playback",
						"arec_mw/graph_playback.cpp"
					],
					[
						"dbus_wrapper.cpp",
						"arec_mw/dbus_wrapper.cpp"
					],
					[
						"mw_streamengine_live_record.cpp",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw_mcfw.cpp",
						"arec_mw/mw_mcfw.cpp"
					],
					[
						"mw_gst_msg_handler.cpp",
						"arec_mw/mw_gst_msg_handler.cpp"
					],
					[
						"graph_playback.cpp",
						"arec_mw/graph_playback.cpp"
					],
					[
						"arec_mw/makefile",
						"arec_mw/Makefile"
					],
					[
						"mw_streamengine_live_record.h",
						"arec_mw/mw_streamengine_live_record.h"
					],
					[
						"mw_streamout_hndl.h",
						"arec_mw/mw_streamout_hndl.h"
					],
					[
						"graph_hv.h",
						"arec_mw/graph_hv.h"
					],
					[
						"graph_previewrecord.cpp",
						"arec_mw/graph_previewrecord.cpp"
					],
					[
						"areclog",
						"cbox_sdk/linux_devkit/usr/include/IArecLog.h"
					],
					[
						"utility.h",
						"arec_mw/utility.h"
					],
					[
						"graph_ds203.cpp",
						"arec_mw/graph_ds203.cpp"
					],
					[
						"mw_layout_manager.cpp",
						"arec_mw/mw_layout_manager.cpp"
					],
					[
						"mw_streamout",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"arec_streamout",
						"arec_mw/graph_streamout.cpp"
					],
					[
						"mw_strmout",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"arec_str",
						"sw_plugin/arec_streamengine/arec_streamengine.h"
					],
					[
						"mw_sterm",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"export_",
						"arec_mw/JSON/export_mp4.json"
					],
					[
						"module",
						"arec_mw/module_tool/module_list"
					],
					[
						"mw_sr",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"mw_strm",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"arec_uplo",
						"arec_mw/JSON/ts_ftp_uploading.json"
					],
					[
						"gstcurl",
						"sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"mw_actin",
						"arec_mw/mw_action.cpp"
					],
					[
						"graph_export",
						"arec_mw/graph_export.cpp"
					],
					[
						"mw_streamengine_live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"streamhld",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"gstrtspsrc.c",
						"sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"strea",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"",
						"arec_mw/mw_gst_msg_handler.cpp"
					],
					[
						"mw_acit",
						"arec_mw/mw_action.cpp"
					],
					[
						"gstrtph264de",
						"sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"grap_buil",
						"arec_mw/graph_builder.cpp"
					],
					[
						"get_module_build_server.py",
						"arec_mw/module_tool/get_module_build_server.py"
					],
					[
						"get_modu",
						"arec_mw/module_tool/get_module.py"
					],
					[
						"arec_strm",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"graph_buil",
						"arec_mw/graph_builder.cpp"
					],
					[
						"gstcurlbasesink.c",
						"sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"mw_stri",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"stream_hd",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"streamhd",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"mw_live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"curlbasesink",
						"sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"curlsftpsin",
						"sw_plugin/arec_curl/gstcurlsftpsink.c"
					],
					[
						"graph_export.cpp",
						"arec_mw/graph_export.cpp"
					],
					[
						"mw_aciton",
						"arec_mw/mw_action.cpp"
					],
					[
						"mw/makefi",
						"arec_mw/Makefile"
					],
					[
						"export_mp4",
						"arec_mw/JSON/[export_mp4_ftp]protocol.json"
					],
					[
						"export_mp4_ftp",
						"arec_mw/JSON/[export_mp4_ftp]protocol.json"
					],
					[
						"gstrtmp",
						"sw_plugin/arec_rtmp/gstrtmp.c"
					],
					[
						"mw_ction",
						"arec_mw/mw_action.cpp"
					],
					[
						"arec_rtsp",
						"arec_mw/test_code/test_gstrtspserver/arec_rtspserver.c"
					],
					[
						"rtspserver",
						"arec_mw/test_code/test_gstrtspserver/arec_rtspserver"
					],
					[
						"mw_actiojn",
						"arec_mw/JSON/test_action.json"
					],
					[
						"mw_stream_live",
						"arec_mw/mw_streamengine_live_record.cpp"
					],
					[
						"gst_info.h",
						"arec_mw/inc/mpegtsmux_info.h"
					],
					[
						"mw_streami",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"arec_streamgindata",
						"arec_mw/inc/ArecStreamEngineData.h"
					],
					[
						"iarecstreamengine.h",
						"arec_mw/inc/IArecStreamEngine.h"
					],
					[
						"iarecstreamengine",
						"arec_mw/inc/IArecStreamEngine.h"
					],
					[
						"json",
						"arec_mw/cJSON.cpp"
					],
					[
						"mw_strem_hd",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"gstflvmux",
						"sw_plugin/arec_flv/gstflvmux.c"
					],
					[
						"uti",
						"arec_mw/utility.h"
					],
					[
						"mw.h",
						"arec_mw/mw.h"
					],
					[
						"mw_steamout_hndl",
						"arec_mw/mw_streamout_hndl.cpp"
					],
					[
						"export_ftp",
						"arec_mw/JSON/export_mp4_ftp.json"
					],
					[
						"export.json",
						"arec_mw/JSON/export_mp4.json"
					],
					[
						"mw_xml_export.cpp",
						"arec_mw/mw_xml_export.cpp"
					],
					[
						"gstalsasink",
						"sw_plugin/alsa/gstalsasink.c"
					],
					[
						"gstqtmux",
						"sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"gstrtpjitter",
						"sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"iarec",
						"sw_plugin/arec_streamengine/IArecStreamEngine.h"
					],
					[
						"mw_streamengine.cpp",
						"arec_mw/mw_streamengine.cpp"
					],
					[
						"arec_strem",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_stream",
						"sw_plugin/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"mcfw/mcfw_event.h",
						"arec_mcfw/src/mcfw/mcfw_event.h"
					],
					[
						"src/arec_mcfw.c",
						"arec_mcfw/src/arec_mcfw.c"
					],
					[
						"arec_com/src/makefile",
						"arec_com/src/Makefile"
					],
					[
						"src/mcfw/mcfw_event.h",
						"arec_mcfw/src/mcfw/mcfw_event.h"
					],
					[
						"protoc",
						"arec_mw/protocol_ui.cpp"
					],
					[
						"arec_medi",
						"testbed/arec_mediadetect_testbed/arec_mediadetect_testbed.cpp"
					],
					[
						"graph_rec",
						"arec_mw/graph_previewrecord.cpp"
					],
					[
						"dyn",
						"arec_mw/JSON/dynamic_multi_mp4.json"
					],
					[
						"record",
						"arec_mw/JSON/mp4_record.json"
					],
					[
						"msg_",
						"arec_mw/mw_gst_msg_handler.cpp"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"arec",
						"~/Git/arec_ct/arec_ct.sublime-project"
					],
					[
						"gstrea",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"gui",
						"~/Git/msrgui/msrgui.sublime-project"
					],
					[
						"gstream",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msr13",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"rtsp",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"rts",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msrgst",
						"~/Git/msrgst/msrgst.sublime-project"
					],
					[
						"m3",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"gst",
						"~/Git/msrgst/msrgst.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 482.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 386.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 458,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"PROP_",
						"PROP_SPEED	enum <anonymous>"
					],
					[
						"strea",
						"stream_task	int *"
					],
					[
						"pRtp",
						"pRtpQueue	GstElement*"
					],
					[
						"Log",
						"Log(const int priority, const char *message, ...)	void"
					],
					[
						"m_rid",
						"m_ridLiveTypeMap	std::map<int, int>"
					],
					[
						"Conv",
						"ConvertToStr(T value)	STDSTR"
					],
					[
						"ran",
						"random()	long"
					],
					[
						"link",
						"linkTeeAndElement(GstElement *pTee, GstElement *pElement)	ARESULT"
					],
					[
						"ARE",
						"AREC_SUCCESS	macro"
					],
					[
						"crea",
						"createElement(const STDSTR &strElementName, const STDSTR &strGivenName, GstElement **ppElement)	ARESULT"
					],
					[
						"Conver",
						"ConvertStrTo<typename T>(STDSTR str)	T"
					]
				]
			},
			"buffers":
			[
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 126.0,
				"last_filter": "install",
				"selected_items":
				[
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"isnt",
						"Package Control: Install Package"
					],
					[
						"Package Control: r",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ins",
						"Package Control: Install Package"
					],
					[
						"sublime se",
						"Preferences: SublimeClang Settings â€“ User"
					],
					[
						"package",
						"Package Control: Install Package"
					],
					[
						"pack",
						"Preferences: Browse Packages"
					],
					[
						"packe",
						"Preferences: Browse Packages"
					]
				],
				"width": 514.0
			},
			"console":
			{
				"height": 139.0,
				"history":
				[
					"navigation_history_back",
					"switch_script",
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/jiahao/Git/msr13",
				"/home/jiahao/Git/msr13/monitor",
				"/home/jiahao/Git/msr13/monitor/plugins"
			],
			"file_history":
			[
				"//home/jiahao/Git/msr13/inc/dbms_recd.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CMFileTranFile/CMFileTranFile.cpp",
				"/home/jiahao/Git/msr13/libsrc/m3u8transfer/a_m3u8Transfer.cpp",
				"/home/jiahao/Git/msr13/vodstreamer/src/vods_handlerTask.cpp",
				"//home/jiahao/Git/msr13/inc/a_m3u8Transfer.h",
				"/home/jiahao/Git/msr13/postworker/src/posw_transState.cpp",
				"/home/jiahao/Git/msr13/postworker/src/posw_transImpState.cpp",
				"/home/jiahao/Git/msr13/recorder/src/recd_daemon.cpp",
				"//home/jiahao/Git/msr13/recorder/inc/recd_import_video.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CGstBin/CGstBin.cpp",
				"/home/jiahao/Git/msr13/vodstreamer/src/vods_daemon.cpp",
				"/home/jiahao/Git/msr13/postworker/src/posw_mptsGenTmszTask.cpp",
				"/home/jiahao/Git/msr13/postworker/src/posw_tsToFlvTask.cpp",
				"/home/jiahao/Git/msr13/postworker/inc/posw_transTask.h",
				"/home/jiahao/Git/msr13/postworker/inc/posw_transState.h",
				"/home/jiahao/Git/msr13/postworker/inc/posw_transImpState.h",
				"/home/jiahao/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/jiahao/Git/msr13/recorder/src/recd_import_video.cpp",
				"/home/jiahao/Git/msr13/libsrc/dbms/dbms_recd.cpp",
				"/home/jiahao/Git/msr13/libsrc/mongoose/build/Makefile",
				"/home/jiahao/Git/msr13/MSR13_Path",
				"/home/jiahao/Git/msr13/libsrc/dbms/build/Makefile",
				"/home/jiahao/Git/msr13/monitor/src/moni_daemon.cpp",
				"/home/jiahao/Git/msr13/postworker/build/Makefile",
				"/home/jiahao/Git/msr13/libsrc/tmszparser/Makefile",
				"/home/jiahao/Git/msr13/build/MSR13_Library.mk",
				"/home/jiahao/Git/msr13/build/MSR13.mk",
				"//home/jiahao/Git/msr13/inc/msrlogger.h",
				"//home/jiahao/Git/msr13/monitor/plugins/moni_plugin.h",
				"/home/jiahao/Git/msr13/monitor/src/moni_service.cpp",
				"/home/jiahao/Git/msr13/monitor/plugins/moni_msr.cpp",
				"//home/jiahao/Git/msr13/monitor/inc/moni_service.h",
				"//home/jiahao/Git/msr13/monitor/inc/moni_daemon.h",
				"//home/jiahao/Git/msr13/inc/arecbase/a_ArecError.h",
				"/home/jiahao/Git/msr13/postworker/src/posw_daemon.cpp",
				"//home/jiahao/Git/msr13/inc/dbms_recdfile.h",
				"//home/jiahao/Git/msr13/communicator/inc/comm_upload_video_hndl.h",
				"/home/jiahao/Git/msr13/postworker/inc/posw_dmuxTask.h",
				"/home/jiahao/Git/msr13/postworker/src/posw_dmuxTask.cpp",
				"/home/jiahao/Git/msr13/postworker/src/posw_transTask.cpp",
				"/home/jiahao/Git/msr13/communicator/src/comm_upload_video_hndl.cpp",
				"/home/jiahao/Git/msr13/confdata/msr/monitor.conf",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CTsToMp4/CTsToMp4.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/module_list",
				"//home/jiahao/Git/msr13/postworker/inc/posw_dmuxTask.h",
				"//home/jiahao/Git/msr13/inc/arecbase/a_const.h",
				"/home/jiahao/Downloads/messages",
				"/home/jiahao/Git/msr13/inc/arecbase/a_ArecError.h",
				"//home/jiahao/Git/msr13/inc/a_pathutil.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/Makefile",
				"/home/jiahao/Git/msr13/postworker/src/posw_dRemoverTask.cpp",
				"/home/jiahao/Git/msr13/streamer/src/strm_streamer.cpp",
				"/home/jiahao/Git/msr13/streamer/src/strm_daemon.cpp",
				"/home/jiahao/Git/msr13/libsrc/dbms/dbms_transcodepool.cpp",
				"/home/jiahao/Git/msr13/inc/dbms_publish.h",
				"/home/jiahao/Git/msr13/inc/dbms_transcodepool.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CVideoRTSP/Makefile",
				"/home/jiahao/Git/msr13/streamer/inc/strm_daemon.h",
				"/home/jiahao/Git/msr13/inc/dbms_recd.h",
				"/home/jiahao/Git/msr13/confdata/msr/streamer.conf",
				"/home/jiahao/Dropbox/CTCI/ProgrammerAnt/1.6.cpp",
				"/home/jiahao/Git/msr13/communicator/test/M-SEARCH",
				"/home/jiahao/Git/msr13/communicator/src/comm_ssdpparser.cpp",
				"/home/jiahao/Git/msr13/communicator/src/comm_box_management.cpp",
				"/home/jiahao/Git/msr13/msr13.sublime-project",
				"/home/jiahao/Git/msr13/communicator/src/comm_ssdpcomposer.cpp",
				"/home/jiahao/Git/msr13/communicator/inc/comm_ssdpparser.h",
				"/home/jiahao/Git/msr13/communicator/src/comm_daemon.cpp",
				"//home/jiahao/Git/msr13/inc/exch_httphandler.h",
				"/home/jiahao/Git/msr13/communicator/inc/comm_daemon.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/Makefile",
				"/home/jiahao/Git/msr13/libsrc/exchanger/exch_httphandler.cpp",
				"/home/jiahao/Git/msr13/libsrc/exchanger/sample/httpsend.cpp",
				"/home/jiahao/Git/msr13/libsrc/exchanger/sample/ttget.cpp",
				"/home/jiahao/Git/msr13/communicator/cjson/inc/comm_cjson_compose_base.h",
				"/home/jiahao/Git/msr13/inc/exch2_base.h",
				"/home/jiahao/Git/msr13/libsrc/exchanger/exch_rpccall.cpp",
				"//home/jiahao/Git/msr13/inc/exch_rpccall.h",
				"/home/jiahao/Git/msr13/libsrc/exchanger/exch_answgetversion.cpp",
				"/home/jiahao/Git/msr13/libsrc/exch2/exch2_base.cpp",
				"/home/jiahao/Git/msr13/libsrc/exch2/exch2_cache.cpp",
				"/home/jiahao/Git/msr13/tools/linktest/script/rtpSender.sh",
				"/home/jiahao/Git/msr13/buildRTSPServer.sh",
				"/home/jiahao/Git/msr13/tools/linktest/script/rtspFake.sh",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtspserver/test_gstrtspserver/Makefile",
				"/home/jiahao/Lib/ffmpeg/tests/ffserver.conf",
				"/home/jiahao/Git/msr13/libsrc/exch2/exch2_msgroute.cpp",
				"/home/jiahao/Git/msr13/libsrc/exch2/exch2_svclabel.cpp",
				"/home/jiahao/Git/msr13/inc/exch2_svclabel.h",
				"/home/jiahao/Git/msr13/libsrc/exch2/exch2_wrap.c",
				"/home/jiahao/Git/msr13/libsrc/exch2/exch2_wrap.cpp",
				"/home/jiahao/Git/msr13/postworker/inc/posw_daemon.h",
				"/home/jiahao/Git/msr13/recorder/src/recd_task.cpp",
				"//home/jiahao/Git/msr13/postworker/inc/posw_daemon.h",
				"//home/jiahao/Git/msr13/postworker/inc/posw_transTask.h",
				"//home/jiahao/Git/msr13/inc/a_b64.h",
				"/home/jiahao/Git/msr13/vodstreamer/inc/vods_handlerTask.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/IMediaPlugin.h",
				"//home/jiahao/Git/msr13/inc/a_msrmediaexecutor.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/a_msrmediaexecutor.cpp",
				"/home/jiahao/Git/msr13/libsrc/tasksmgr/a_msrtasksmgr.cpp",
				"/home/jiahao/Git/msr13/libsrc/tasksmgr/a_msrtaskbase.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/write_file/a_createinst.cpp",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CMediaPluginBase.cpp",
				"/home/jiahao/Git/msr13/confdata/msr/msr_service.conf",
				"/home/jiahao/Git/msr13/confdata/msr/webgui.conf",
				"/home/jiahao/Git/msr13/libsrc/msrutil/a_b64.cpp",
				"/home/jiahao/Git/msr13/inc/a_msrtaskbase.h",
				"//home/jiahao/Git/msr13/inc/a_msrtasksmgr.h",
				"/home/jiahao/Git/msr13/inc/a_msrtasksmgr.h",
				"/home/jiahao/Git/msr13/postworker/src/posw_ltransTask.cpp",
				"/home/jiahao/Git/msr13/recorder/inc/recd_task.h",
				"/home/jiahao/Downloads/libb64-1.2/src/Makefile",
				"/home/jiahao/Downloads/libb64-1.2/base64/base64.cc",
				"/home/jiahao/Downloads/libb64-1.2/Makefile",
				"/home/jiahao/Lib/nginx-1.5.2/webgui.conf",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CTsToMp4/sample.cpp",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/a_msrmediatask.cpp",
				"/home/jiahao/Git/msr13/libsrc/dllmgr/a_DllMgr.cpp",
				"/home/jiahao/Git/msr13/inc/a_factory.h",
				"/home/jiahao/Git/msr13/inc/a_interface.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CMFileTranFile/CMFileTranFile.h",
				"/home/jiahao/Git/msr13/inc/a_msrmediaexecutor.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/a_msrmediaengine.cpp",
				"/home/jiahao/Git/msr13/inc/a_msrmediaengine.h",
				"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CMediaPluginBase.h",
				"/home/jiahao/Git/msr13/libsrc/dllmgr/a_factory.cpp",
				"/home/jiahao/Git/msr13/scheduler/plugins/schd_posw.h"
			],
			"find":
			{
				"height": 40.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/home/jiahao/Git/msr13/",
					"/home/jiahao/Git/msr13/libsrc/exchanger",
					"/home/jiahao/Git/msr13/",
					"/home/jiahao/tmp/#EXTM3U",
					"/home/jiahao/Git/msr13/",
					"/home/jiahao/Git/msrgst/",
					"/home/jiahao/Git/msr13/",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"genHlsPath",
					"genHlsData",
					"genM3u8ByRid",
					"M3U8_TYPE_CINDEX",
					"strUserName",
					"genHlsPath",
					"nReqType",
					"gst_ghost_pad_new",
					"m_nRid",
					"import",
					"-lpthread ",
					"-l",
					"-lpthread",
					"MSR13_DLIB",
					"LDFLAGS",
					"MSR13.mk",
					"LDFLAGS",
					"-pthread",
					"HandleStorageStatus",
					"storage.status",
					"HandleStorageStatus",
					"storage.status",
					"postMessage",
					"AREC_MONISVC_STOR_OVERRUN",
					"storage.status",
					"HandleServiceCpu",
					"IMoniPlugin",
					"HandleStorageStatus",
					"HandlePostMessage",
					"aacparse",
					"mp4mux",
					"arec_mp4mux",
					"AV_GAP_ENDURE",
					"sync",
					"mp4 record-pause",
					"filesrc:qid",
					"strSrcPath",
					"propertyMap",
					"MSG_POSW_START_DOWNLOADFILE",
					"create task tasksName: TsToDownload",
					"genHlsPath",
					"getVodDuration",
					"MSG_RECD_IMPORT_VIDEO",
					"m_strLocMap",
					"isFileExist",
					"already muxing!!",
					"SECOND_OF_DAY",
					"isFileExist",
					"status",
					"setRTSPEnable",
					"initRTSP",
					"InitRTSP",
					"m_pRTSPMgr",
					"m_pStreamer",
					"GetRTSPVODPathByRid",
					"MSG_STRM_GET_RTSP_VOD_PATH",
					"AREC_STRM_RTSPMGR_NOT_EXIST",
					"301557",
					"307557",
					"SECOND_OF_DAY",
					"isFileExist",
					"m_strLocMap",
					"already muxing!!",
					"SSDP_ST",
					"Arec:CBox",
					"-",
					"Getcaps",
					"GetData",
					"BOX MNGR",
					"GetData",
					"HTTP Get data could not connect",
					"HTTP Get data fail.",
					"GetData",
					"HTTP Get data fail.",
					"m_oHttpHandler.GetData",
					"m_oHttpHandler",
					"CHttpHandler",
					"HTTP Get data timeout",
					"mp4",
					"rtspsink",
					"m_mutexIndexm3u8",
					"static",
					"typedef",
					"m_mutexReqToInfo",
					"ReleaseInstance",
					"m_bStart",
					"InitPipelineByName",
					"m_pMediaExecutor",
					"CMediaExecutor",
					"m_engine",
					"m_pMediaEngine",
					"401326",
					"EndRemove",
					"SetRemoveCallback",
					"m_pData",
					"m_pData]",
					"m_pData",
					"removeCallback",
					"m_pData",
					"removeCallback",
					"m_pRemoveCallback",
					"REMOVE_CALLBACK",
					"removeCallback",
					"m_pRemoveCallback",
					"pCallbackFunc",
					"m_pRemoveCallback",
					"SetRemoveCallback",
					"m_pRemoveCallback",
					"///",
					"setPro",
					"m_engine",
					"Med",
					"SetTaskSPId",
					"= 0",
					"pure",
					"m_pMediaPlugins",
					"m_liveMgr",
					"include \"a_factory.h\"",
					"a_factory.h",
					"CMediaEngine",
					"CTasksMgr",
					"CTaskBase",
					"m_bStart",
					"Release",
					"INFEXIT",
					"QueryInterface",
					"DEBUG",
					"debug"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"sheets":
					[
					]
				}
			],
			"incremental_find":
			{
				"height": 30.0
			},
			"input":
			{
				"height": 40.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.clang":
			{
				"height": 178.0
			},
			"output.exec":
			{
				"height": 144.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,73,24,1920,1052,1920,1080",
			"project": "msr13.sublime-project",
			"replace":
			{
				"height": 56.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"transimp",
						"postworker/inc/posw_transImpState.h"
					],
					[
						"transstat",
						"postworker/inc/posw_transState.h"
					],
					[
						"transtask",
						"postworker/inc/posw_transTask.h"
					],
					[
						"posw_tsto",
						"postworker/src/posw_tsToFlvTask.cpp"
					],
					[
						"posw_task",
						"postworker/src/posw_mptsGenTmszTask.cpp"
					],
					[
						"vods_da",
						"vodstreamer/src/vods_daemon.cpp"
					],
					[
						"cgstbin",
						"libsrc/mediaengine/plugins/CGstBin/CGstBin.cpp"
					],
					[
						"mfiletra",
						"libsrc/mediaengine/plugins/CMFileTranFile/CMFileTranFile.cpp"
					],
					[
						"dbms_recd",
						"libsrc/dbms/dbms_recd.cpp"
					],
					[
						"recd_da",
						"recorder/src/recd_daemon.cpp"
					],
					[
						"msr13_library",
						"build/MSR13_Library.mk"
					],
					[
						"msr13_",
						"MSR13_Path"
					],
					[
						"msr13.mk",
						"build/MSR13.mk"
					],
					[
						"postworker/make",
						"postworker/build/Makefile"
					],
					[
						"moni",
						"monitor/src/moni_daemon.cpp"
					],
					[
						"comm_upload_video_hndl.cpp",
						"communicator/src/comm_upload_video_hndl.cpp"
					],
					[
						"posw_tran",
						"postworker/src/posw_transTask.cpp"
					],
					[
						"moni_da",
						"monitor/src/moni_daemon.cpp"
					],
					[
						"posw_da",
						"postworker/src/posw_daemon.cpp"
					],
					[
						"tstomp4",
						"libsrc/mediaengine/plugins/CTsToMp4/CTsToMp4.cpp"
					],
					[
						"posw_dmuxtask",
						"postworker/src/posw_dmuxTask.cpp"
					],
					[
						"ctstomp4",
						"libsrc/mediaengine/plugins/CTsToMp4/CTsToMp4.cpp"
					],
					[
						"cmf",
						"libsrc/mediaengine/plugins/CMFileTranFile/CMFileTranFile.cpp"
					],
					[
						"cmfile",
						"libsrc/mediaengine/plugins/CMFileTranFile/CMFileTranFile.cpp"
					],
					[
						"posw_dmux",
						"postworker/src/posw_dmuxTask.cpp"
					],
					[
						"vods_d",
						"vodstreamer/src/vods_daemon.cpp"
					],
					[
						"posw_d",
						"postworker/src/posw_dmuxTask.cpp"
					],
					[
						"posw_daem",
						"postworker/src/posw_daemon.cpp"
					],
					[
						"",
						"inc/dbms_publish.h"
					],
					[
						"dbms_pub",
						"inc/dbms_publish.h"
					],
					[
						"dbms_transcodepool",
						"inc/dbms_transcodepool.h"
					],
					[
						"trascode",
						"libsrc/dbms/dbms_transcodepool.cpp"
					],
					[
						"vods_dea",
						"vodstreamer/src/vods_daemon.cpp"
					],
					[
						"strm.conf",
						"confdata/msr/streamer.conf"
					],
					[
						"strm_da",
						"streamer/src/strm_daemon.cpp"
					],
					[
						"comm_ssdpparser",
						"communicator/inc/comm_ssdpparser.h"
					],
					[
						"comm_ssdp",
						"communicator/src/comm_ssdpparser.cpp"
					],
					[
						"msearch",
						"communicator/test/M-SEARCH"
					],
					[
						"comm_daemon",
						"communicator/src/comm_daemon.cpp"
					],
					[
						"rtsp",
						"tools/linktest/script/rtspFake.sh"
					],
					[
						"rtspserver",
						"buildRTSPServer.sh"
					],
					[
						"exch2_base",
						"inc/exch2_base.h"
					],
					[
						"exchange",
						"libsrc/exchanger/exch_answgetversion.cpp"
					],
					[
						"vods_han",
						"vodstreamer/inc/vods_handlerTask.h"
					],
					[
						"vods_handlertask",
						"vodstreamer/src/vods_handlerTask.cpp"
					],
					[
						"vods_hand",
						"vodstreamer/inc/vods_handlerTask.h"
					],
					[
						"mediapl",
						"libsrc/mediaengine/plugins/CMediaPluginBase.cpp"
					],
					[
						"imedi",
						"libsrc/mediaengine/plugins/IMediaPlugin.h"
					],
					[
						"mediapluginbase",
						"libsrc/mediaengine/plugins/CMediaPluginBase.cpp"
					],
					[
						"a_msrmediaexecutor",
						"libsrc/mediaengine/a_msrmediaexecutor.cpp"
					],
					[
						"posw_dmuxta",
						"postworker/src/posw_dmuxTask.cpp"
					],
					[
						"posw_dmu",
						"postworker/src/posw_dmuxTask.cpp"
					],
					[
						"b64",
						"libsrc/msrutil/a_b64.cpp"
					],
					[
						"web",
						"confdata/msr/webgui.conf"
					],
					[
						"msr_ser",
						"confdata/msr/msr_service.conf"
					],
					[
						"a_taskbas",
						"libsrc/tasksmgr/a_msrtaskbase.cpp"
					],
					[
						"taskmgr",
						"libsrc/tasksmgr/a_msrtasksmgr.cpp"
					],
					[
						"a_mstaskbase",
						"libsrc/tasksmgr/a_msrtaskbase.cpp"
					],
					[
						"taskbase",
						"libsrc/tasksmgr/a_msrtaskbase.cpp"
					],
					[
						"a_msrtasksmgr",
						"inc/a_msrtasksmgr.h"
					],
					[
						"posw_dae",
						"postworker/src/posw_daemon.cpp"
					],
					[
						"recd_task",
						"recorder/src/recd_task.cpp"
					],
					[
						"posw_flv",
						"postworker/src/posw_tsToFlvTask.cpp"
					],
					[
						"posw_dre",
						"postworker/src/posw_dRemoverTask.cpp"
					],
					[
						"posw_ltran",
						"postworker/src/posw_ltransTask.cpp"
					],
					[
						"posw_transtask",
						"postworker/src/posw_transTask.cpp"
					],
					[
						"posw_trans",
						"postworker/inc/posw_transTask.h"
					],
					[
						"posw_",
						"postworker/src/posw_dmuxTask.cpp"
					],
					[
						"hand",
						"vodstreamer/inc/vods_handlerTask.h"
					],
					[
						"posw_dea",
						"postworker/src/posw_daemon.cpp"
					],
					[
						"posw_trastask",
						"postworker/inc/posw_transTask.h"
					],
					[
						"a_msrexcu",
						"libsrc/mediaengine/a_msrmediaexecutor.cpp"
					],
					[
						"mediaengi",
						"libsrc/mediaengine/a_msrmediaengine.cpp"
					],
					[
						"excutor",
						"libsrc/mediaengine/a_msrmediaexecutor.cpp"
					],
					[
						"posw_deam",
						"postworker/src/posw_daemon.cpp"
					],
					[
						"ctaskbase",
						"inc/a_msrtaskbase.h"
					],
					[
						"mediatask",
						"libsrc/mediaengine/a_msrmediatask.cpp"
					],
					[
						"a_interface.h",
						"inc/a_interface.h"
					],
					[
						"a_factory.h",
						"inc/a_factory.h"
					],
					[
						"dllm",
						"libsrc/dllmgr/a_DllMgr.cpp"
					],
					[
						"cmediaplu",
						"libsrc/mediaengine/plugins/CMediaPluginBase.h"
					],
					[
						"mediabase",
						"libsrc/mediaengine/plugins/CMediaPluginBase.h"
					],
					[
						"imedia",
						"libsrc/mediaengine/plugins/IMediaPlugin.h"
					],
					[
						"cmedai",
						"libsrc/mediaengine/plugins/CMediaPluginBase.cpp"
					],
					[
						"cobjbase",
						"libsrc/configmgr/plugins/a_objbase.cpp"
					],
					[
						"inter",
						"inc/a_interface.h"
					],
					[
						"imediap",
						"libsrc/mediaengine/plugins/CMediaPluginBase.cpp"
					],
					[
						"mediaexcu",
						"inc/a_msrmediaexecutor.h"
					],
					[
						"imediaplugin",
						"libsrc/mediaengine/plugins/CMediaPluginBase.cpp"
					],
					[
						"media",
						"libsrc/mediaengine/plugins/IMediaPlugin.h"
					],
					[
						"cmfi",
						"libsrc/mediaengine/plugins/CMFileTranFile/CMFileTranFile.cpp"
					],
					[
						"posw_daemon",
						"postworker/inc/posw_daemon.h"
					],
					[
						"dbms_tran",
						"libsrc/dbms/dbms_transcodepool.cpp"
					],
					[
						"tstomp",
						"libsrc/mediaengine/plugins/CTsToMp4/CTsToMp4.cpp"
					],
					[
						"tstomp4/make",
						"libsrc/mediaengine/plugins/CTsToMp4/Makefile"
					],
					[
						"tstomp4/sa",
						"libsrc/mediaengine/plugins/CTsToMp4/sample.cpp"
					],
					[
						"a_createinst.h",
						"libsrc/configmgr/plugins/a_createinst.h"
					],
					[
						"a_inst",
						"monitor/plugins/a_createinst.h"
					],
					[
						"tstomp4/a_",
						"libsrc/mediaengine/plugins/CTsToMp4/a_createinst.cpp"
					],
					[
						"ctstomp4/make",
						"libsrc/mediaengine/plugins/CTsToMp4/Makefile"
					],
					[
						"cmp4",
						"libsrc/mediaengine/plugins/CTsToMp4/CTsToMp4.cpp"
					],
					[
						"cmediapl",
						"libsrc/mediaengine/plugins/CMediaPluginBase.cpp"
					],
					[
						"a_msrmediatask",
						"inc/a_msrmediatask.h"
					],
					[
						"media/ma",
						"libsrc/mediaengine/build/Makefile"
					],
					[
						"dllmgr/mak",
						"libsrc/dllmgr/build/Makefile"
					],
					[
						"dll",
						"libsrc/dllmgr/a_DllMgr.cpp"
					],
					[
						"mediae",
						"inc/a_msrmediaexecutor.h"
					],
					[
						"a_factory",
						"libsrc/dllmgr/a_factory.cpp"
					],
					[
						"a_fac",
						"inc/a_factory.h"
					],
					[
						"a_msrmediaengine",
						"inc/a_msrmediaengine.h"
					],
					[
						"a_mediaeng",
						"libsrc/mediaengine/a_msrmediaengine.cpp"
					],
					[
						"a_arec",
						"inc/arecbase/a_ArecDef.h"
					],
					[
						"cmedia",
						"libsrc/mediaengine/plugins/CMediaPluginBase.cpp"
					],
					[
						"iplugin",
						"libsrc/dllmgr/demo/IPlugin.h"
					],
					[
						"a_inter",
						"inc/a_interface.h"
					],
					[
						"a_mstr",
						"inc/a_msrtasksmgr.h"
					],
					[
						"a_msr",
						"inc/a_msrtasksmgr.h"
					],
					[
						"posw_tr",
						"postworker/src/posw_transTask.cpp"
					],
					[
						"ctran",
						"libsrc/mediaengine/plugins/CMFileTranFile/CMFileTranFile.cpp"
					],
					[
						"a_excu",
						"inc/a_msrmediaexecutor.h"
					],
					[
						"i",
						"libsrc/dllmgr/demo/IPlugin.h"
					],
					[
						"a_mediaex",
						"libsrc/mediaengine/a_msrmediaexecutor.cpp"
					],
					[
						"a_media",
						"inc/a_msrmediaengine.h"
					],
					[
						"cposw_task",
						"postworker/inc/posw_transTask.h"
					],
					[
						"a_taskbase",
						"libsrc/tasksmgr/a_msrtaskbase.cpp"
					],
					[
						"a_tasa",
						"libsrc/tasksmgr/a_msrtaskbase.cpp"
					],
					[
						"mediam",
						"libsrc/mediaengine/a_msrmediaengine.cpp"
					],
					[
						"recd_dae",
						"recorder/src/recd_daemon.cpp"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"arec_",
						"~/Git/arec_ct/arec_ct.sublime-project"
					],
					[
						"arec",
						"~/Git/arec_ct/arec_ct.sublime-project"
					],
					[
						"msrgst",
						"~/Git/msrgst/msrgst.sublime-project"
					],
					[
						"gstrea",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msrgui",
						"~/Git/msrgui/msrgui.sublime-project"
					],
					[
						"arec_ct",
						"~/Git/arec_ct/arec_ct.sublime-project"
					],
					[
						"rtsp",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"gst-",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"msr13",
						"~/Git/msr13/msr13.sublime-workspace"
					],
					[
						"gui",
						"~/Git/msrgui/msrgui.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 922.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 390.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 459,
			"workspace_name": "/home/jiahao/Git/msr13/msr13.sublime-workspace"
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"m_is",
						"m_is_userabort	bool"
					],
					[
						"get",
						"GetSampleData()	MUXSAMPLE *"
					],
					[
						"mp_cond_src_",
						"mp_cond_src_stop	ArecCond *"
					],
					[
						"GST_CLOCK_TIME",
						"GST_CLOCK_TIME_IS_VALID	macro"
					],
					[
						"CURL_SOCK",
						"CURL_SOCKET_TIMEOUT	macro"
					],
					[
						"curl_multi_setop",
						"curl_multi_setopt(CURLM *multi_handle, CURLMoption option, ...)	CURLMcode"
					],
					[
						"scal",
						"scaled_duration"
					],
					[
						"segment",
						"segment_start"
					],
					[
						"m_is_",
						"m_is_has_sub_video	bool"
					],
					[
						"m_is_has",
						"m_is_has_out_audio	bool"
					],
					[
						"GST_TIME_VA",
						"GST_CLOCK_TIME_IS_VALID	macro"
					],
					[
						"p",
						"pts	GstClockTime"
					],
					[
						"Get",
						"GetTotalOffset()	int64"
					],
					[
						"gst_buffer_un",
						"gst_buffer_unmap(GstBuffer *buffer, GstMapInfo *info)	void"
					],
					[
						"m_videoStrea",
						"m_videoStreamOutCurTime	int64"
					],
					[
						"m_audioStream",
						"m_audioStreamOutCurTime	int64"
					],
					[
						"m_audioStre",
						"m_audioStreamOutCurTime	int64"
					],
					[
						"m_video",
						"m_videoStreamTimeHandler	CTimeCodeHandler"
					],
					[
						"video",
						"videoStreamTimeHandler	CTimeCodeHandler"
					],
					[
						"m_video_pre",
						"m_video_pre_cur_diff	int64"
					],
					[
						"m_audio_out",
						"m_drop_audio_outside	bool"
					],
					[
						"to",
						"p_to_fakesrc_dispatch_func_ptr	TO_FAKESRC_DISPATCH_FUNC"
					],
					[
						"PROP_DISPA",
						"PROP_DISPATCH_FUNC_TO_FAKESRC	enum <anonymous>"
					],
					[
						"printf",
						"printf	printf â€¦"
					],
					[
						"rec",
						"record_time	gint64"
					],
					[
						"comman",
						"commandReply	UploaderCommand"
					],
					[
						"eSE_HEAD",
						"eSE_Run_TransHeadStart	eSEEventCode"
					],
					[
						"is_",
						"is_upload_zero_file	gboolean"
					],
					[
						"MP4_STRE",
						"MP4_STREAMING_STOPPING	MP4_STREAMING_STATUS"
					],
					[
						"iTie",
						"iTimeScale	int64"
					],
					[
						"thre",
						"transfer_thread_close	gboolean"
					],
					[
						"us",
						"usleep_time	guint64"
					],
					[
						"DEFU",
						"DEFAULT_SPEED_LEVEL	macro"
					],
					[
						"g_value_get_uint",
						"g_value_get_uint64(const GValue *value)	guint64"
					],
					[
						"re",
						"ResumeAllTask()	eMEXPStatus"
					],
					[
						"eMEX",
						"eMEXPStatus	typedef"
					],
					[
						"m_m",
						"m_pTaskMgr	CTasksMgr *"
					],
					[
						"eME",
						"eMEXP_ERROR	eMEXPStatus"
					],
					[
						"value",
						"valueint	int"
					],
					[
						"isA",
						"isAnyFileExeError	bool"
					],
					[
						"eM",
						"eMEXP_ERROR	eMEXPStatus"
					],
					[
						"append",
						"append(const _CharT *__s)	basic_string<_CharT, _Traits, _Alloc> &"
					],
					[
						"mutal",
						"mutable_filesrc()	::tutorial::Filesrc *"
					],
					[
						"uploader_task",
						"uploader_task_state() const	::tutorial::UploaderTaskStateCode"
					],
					[
						"set_upload",
						"set_uploader_task_state(::tutorial::UploaderTaskStateCode value)	void"
					],
					[
						"set_resp",
						"set_uploader_state_code(::tutorial::UploaderStateCode value)	void"
					],
					[
						"base",
						"basenameRegex	GRegex *"
					],
					[
						"d",
						"d_name	char [256]"
					],
					[
						"eMe",
						"eMEXP_OK	eMEXPStatus"
					],
					[
						"muta",
						"mutable_filesrc()	::tutorial::Filesrc *"
					],
					[
						"dir",
						"dirname(char *__path)	char *"
					],
					[
						"bas",
						"basename(const char *__filename)	char *"
					],
					[
						"emEX",
						"eMEXP_OK	eMEXPStatus"
					],
					[
						"eMex",
						"eMEXP_ERROR	eMEXPStatus"
					],
					[
						"GST_ST",
						"GST_STATE_PAUSED	GstState"
					],
					[
						"upo",
						"uploader_path"
					],
					[
						"uplo",
						"uploader_path"
					],
					[
						"upl",
						"uploader_path"
					],
					[
						"eMEXP",
						"eMEXP_OK	eMEXPStatus"
					],
					[
						"task_pr",
						"task_progress() const	::google::protobuf::int32"
					],
					[
						"as",
						"asInteger()	integer"
					],
					[
						"sample",
						"SAMPLE"
					],
					[
						"UPLOADER_NOTIFIED_TASK_",
						"UPLOADER_NOTIFIED_TASK_STATUS	UPLOADER_NOTIFIED"
					],
					[
						"UPLOADER_NOTIFIED_",
						"UPLOADER_NOTIFIED_TASK_RESULT	UPLOADER_NOTIFIED"
					],
					[
						"parsefrom",
						"ParseFromArray(const void *data, int size)	bool"
					],
					[
						"task",
						"upload_task_list_info() const	const ::tutorial::UploaderTaskListInfo &"
					],
					[
						"Ser",
						"SerializeAsString() const	string"
					],
					[
						"set_task",
						"set_allocated_upload_task_list_info(::tutorial::UploaderTaskListInfo *upload_task_list_info)	void"
					],
					[
						"dbug",
						"PrintDebugString() const	void"
					],
					[
						"uploader",
						"uploader_version() const	const ::std::string &"
					],
					[
						"GST_STATE_R",
						"GST_STATE_READY	GstState"
					],
					[
						"GST_STATE_RE",
						"GST_STATE_RETURN	macro"
					],
					[
						"getTask",
						"GetTaskBySPId(const unsigned long nTaskSPId)	CTaskBase *"
					],
					[
						"m_",
						"m_pTaskMgr	CTasksMgr *"
					],
					[
						"e",
						"eMEXPStatus	typedef"
					],
					[
						"setIn",
						"setInteger(sql::Field &field, integer value)	void"
					],
					[
						"set",
						"setString(int index, string value)	void"
					],
					[
						"m",
						"mutable_write_split_file()	::tutorial::UploaderWriteSplitFile *"
					],
					[
						"set_",
						"set_src_location(const char *value)	void"
					],
					[
						"mu",
						"mutable_write_file()	::tutorial::UploaderWriteFile *"
					],
					[
						"m_pW",
						"m_pWriteSplitFileTable	sql::Table *"
					],
					[
						"Set",
						"setUploaderState(tutorial::UploaderStateCode status)	tutorial::UploaderResponseCode"
					],
					[
						"MA",
						"MAX_TASK	macro"
					],
					[
						"De",
						"DeleteTaskInfobByTaskId(int nTaskId)	bool"
					],
					[
						"m_db",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"GetTak",
						"GetTaskSPId() const	unsigned long"
					],
					[
						"CopyFrom",
						"CopyFrom(const tutorial::UploaderTaskInfo &from)	void"
					],
					[
						"CP",
						"CopyFrom(const google::protobuf::Message &from)	void"
					],
					[
						"cop",
						"CopyFrom(const tutorial::UploaderTaskInfo &from)	void"
					],
					[
						"reco",
						"totalRecordCount()	int"
					],
					[
						"qu",
						"queryStr	const string"
					],
					[
						"recor",
						"record	Record"
					],
					[
						"record",
						"Record	class"
					],
					[
						"FieldSet",
						"FieldSet(std::vector<Field> &definition)	constructor"
					],
					[
						"getBy",
						"getByIndex(int index)	sql::Field *"
					],
					[
						"strB",
						"strB64Ret	string"
					],
					[
						"serialize",
						"SerializeToArray(void *data, int size) const	bool"
					],
					[
						"comm",
						"commandReply	UploaderCommand"
					],
					[
						"dbus_message_iter_get_",
						"dbus_message_iter_get_fixed_array(DBusMessageIter *iter, void *value, int *n_elements)	void"
					],
					[
						"dbus_message_iter_append",
						"dbus_message_iter_append_fixed_array(DBusMessageIter *iter, int element_type, const void *value, int n_elements)	dbus_bool_t"
					],
					[
						"Pare",
						"ParseFromArray(const void *data, int size)	bool"
					],
					[
						"mutable",
						"mutable_task_info()	::tutorial::UploaderTaskInfo *"
					],
					[
						"locat",
						"ftp_upload() const	const ::tutorial::UploaderFtpUpload &"
					],
					[
						"taks",
						"mutable_task_info()	::google::protobuf::RepeatedPtrField< ::tutorial::UploaderTaskInfo> *"
					],
					[
						"UploaderTaskInfo",
						"UploaderTaskListInfo	class"
					],
					[
						"Pa",
						"ParseFromArray(const void *data, int size)	bool"
					],
					[
						"DBUS_TYPE_ST",
						"DBUS_TYPE_STRING	macro"
					],
					[
						"set_taskTy",
						"set_task_type(::tutorial::UploaderTaskType value)	void"
					],
					[
						"mutalbe",
						"mutable_upload_task_list_info()	::tutorial::UploaderTaskListInfo *"
					],
					[
						"method",
						"set_method_type(::tutorial::UploaderCommand_UploaderMethodType value)	void"
					],
					[
						"upload",
						"upload_status() const	::tutorial::UploaderStateCode"
					],
					[
						"Taskhadn",
						"TaskHandleWakeup()	void"
					],
					[
						"m_pTask",
						"m_pTaskHandleWait	ArecCond *"
					],
					[
						"pr",
						"task_priorty() const	::google::protobuf::int32"
					],
					[
						"Write_",
						"Write_split_file	class"
					],
					[
						"Uploader",
						"UpdateTaskInfo(const tutorial::UploaderTaskInfo &uploaderTaskInfo)	bool"
					],
					[
						"m_p",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"Creat",
						"CreateWriteSplitFileTable()	bool"
					],
					[
						"Create",
						"CreateWriteFileTable()	bool"
					],
					[
						"Creaet",
						"CreateFtpUploadTable()	bool"
					],
					[
						"m_pD",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"m_pDB",
						"m_pDbHandler	CDBHandler *"
					],
					[
						"dele",
						"deleteWriteSplitFileInfo(int nTaskId)	bool"
					],
					[
						"delet",
						"deleteFtpUploadInfoById(int nTaskId)	bool"
					],
					[
						"write",
						"write_split_file() const	const ::tutorial::UploaderWriteSplitFile &"
					],
					[
						"writeSpTo",
						"writeSplitFileInfoToRecord(int nTaskId, const tutorial::UploaderWriteSplitFile &uploaderWriteSplitFile, sql::Record &record)	bool"
					],
					[
						"m_pWrite",
						"m_pWriteSplitFileTable	sql::Table *"
					],
					[
						"getRe",
						"getRecordByKeyId(integer keyId)	sql::Record *"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/jiahao/Git/gst-plugins-good/gst/isomp4/gstqtmux.c",
					"settings":
					{
						"buffer_size": 119993,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 375.0,
				"last_filter": "clear",
				"selected_items":
				[
					[
						"clear",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"clear book",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"bookm",
						"Bookmarks: Clear All"
					],
					[
						"bookmark",
						"Bookmarks: Select All"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"show",
						"Change List: Show"
					],
					[
						"change",
						"Change List: Show"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"whocall",
						"WhoCalled: Run indexer"
					],
					[
						"who",
						"WhoCalled: Add/remove project folders"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"remove pag",
						"Package Control: Remove Package"
					],
					[
						"remove p",
						"Package Control: Remove Package"
					],
					[
						"sni",
						"Snippet: CDATA"
					],
					[
						"ifdef",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"if",
						"Snippet: If Condition"
					],
					[
						"defin",
						"Snippet: #ifndef â€¦ #define â€¦ #endif"
					],
					[
						"goto",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"goto ",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"bookam",
						"SublimeBookmarks: Goto Bookmark"
					],
					[
						"",
						"About"
					],
					[
						"show ",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"add book",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addboo",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"remove all",
						"SublimeBookmarks: Remove All Bookmarks (Clear Bookmarks)"
					],
					[
						"showall",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"sublimebook",
						"SublimeBookmarks: Show Bookmarks Only In Current Project "
					],
					[
						"sublimebookmakr",
						"SublimeBookmarks: Show All Bookmarks "
					],
					[
						"book",
						"Bookmarks: Select Next"
					],
					[
						"add",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"addb",
						"SublimeBookmarks: Add Bookmark"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"isnt",
						"Package Control: Install Package"
					],
					[
						"Package Control: r",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ",
						"Package Control: Remove Package"
					],
					[
						"Package Control: ins",
						"Package Control: Install Package"
					],
					[
						"sublime se",
						"Preferences: SublimeClang Settings â€“ User"
					],
					[
						"package",
						"Package Control: Install Package"
					],
					[
						"pack",
						"Preferences: Browse Packages"
					],
					[
						"packe",
						"Preferences: Browse Packages"
					]
				],
				"width": 514.0
			},
			"console":
			{
				"height": 414.0,
				"history":
				[
					"command: jump_forward",
					"asdfsdf",
					"jump_forward",
					"jump_farword",
					"clear",
					"displayName",
					"show all command",
					"command",
					"view.encoding()",
					"navigation_history_back",
					"switch_script",
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/jiahao/Git/gst-plugins-good"
			],
			"file_history":
			[
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/atomsrecovery.cpp",
				"/home/jiahao/nfs/sh/fragmentedMp4.sh",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/audio/audio-format.h",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/audio/audio-info.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/sqlite_handler/arec_dbHandler.cpp",
				"/home/jiahao/nfs/nginx/html/index.html",
				"/usr/share/nginx/html/50x.html",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/arec_uploader.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/arec_streamengine.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstbuffer.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/ArecStreamEngineData.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlbasesink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp",
				"/home/jiahao/nfs/sh/liveMp4.sh",
				"/usr/share/nginx/html/index.html",
				"/usr/local/nginx/html/index.html",
				"/home/jiahao/nfs/video_player.html",
				"/home/jiahao/Dropbox/TestCode/Gstreamer/buffer.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/module_tool/module_list",
				"/home/jiahao/nfs/JSON/multifile_mp4_record.json",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/arec_mediaExecutor.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/arec_mediaExporterGstBase.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/arec_mediaExporterGstBase.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/arec_taskBase.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/task_mgr/arec_taskBase.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/proto_buf/gst_property/gst_property.pb.h",
				"/home/jiahao/Dropbox/TestCode/Gstreamer/5_1.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/Makefile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/Makefile.lib.mk",
				"/home/jiahao/Git/arec_ct/testbed/arec_streamengine_testbed/Makefile",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/get_state.json",
				"/home/jiahao/nfs/JSON/set_state_record.json",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/JSON/set_state_resume.json",
				"/home/jiahao/nfs/JSON/mp4_record.json",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_audioparsers/gstaacparse.c",
				"/home/jiahao/Git/msrgst/arec_audioparsers/Makefile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.h",
				"/home/jiahao/Git/arec_ct/testbed/arec_streamengine_testbed/IArecStreamEngine.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstelement.h",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/glib-2.0/gobject/gobject.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstclock.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstobject.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gstbasesink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstelements.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mpegtsmux/dataqueue/dataqueue.h",
				"/home/jiahao/nfs/m_preview.js",
				"/home/jiahao/nfs/rtp_audio_problem_00.txt",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/Makefile",
				"/home/jiahao/tmp/ubuntu-14.04/Dockerfile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gstbasesink.h",
				"/home/jiahao/nfs/sh/ftp_upload.sh",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstpoll.h",
				"/home/jiahao/nfs/sh/sftp_upload.sh",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/curl/curl.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlbasesink.h",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/curl/multi.h",
				"/home/jiahao/tmp/ubuntu-14.04/install-gstreamer-1.4.x.sh",
				"/home/jiahao/Git/arec_ct/arec_ct.sublime-project",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_builder.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_multifile/gstmultifilesink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/rtpjitterbuffer.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/rtpjitterbuffer.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_streamengine/Makefile",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/Makefile.lib.mk",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c",
				"/home/jiahao/nfs/BurnTest/CBOX_SDK_ENV.postman_environment",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/glib-2.0/glib/gerror.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c",
				"/home/jiahao/Git/cbox_sdk4/linux_devkit/usr/include/IArecLog.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstmessage.h",
				"/home/jiahao/Git/cbox_mediastack/arec_mw/graph_previewrecord.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/atoms.cpp",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/lib/glib-2.0/include/glibconfig.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlsftpsink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/gstcurlsshsink.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/atoms.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_flv/gstflvmux.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl/areccurlhttpsinktypedef.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/arec_uploader.h",
				"/home/jiahao/TestCode/test.cpp",
				"/home/jiahao/.config/sublime-text-3/Packages/User/SublimeClang.sublime-settings",
				"/home/jiahao/tools/google-breakpad-read-only/src/testing/gtest/make/Makefile",
				"/home/jiahao/.kermrc",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/base/gstbasesink.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_flv/gstflvmux.h",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/base/gst/gstelement.h",
				"/home/jiahao/Downloads/log/messages.0",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtspsrc.h",
				"/home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/rtsp/gstrtspconnection.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtsp.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtsp/gstrtsp.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/dll_mgr/arec_interface.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfakesrc.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfakesrc.cpp",
				"//home/jiahao/Git/arec_ct/cbox_sdk/linux_devkit/usr/include/bits/pthreadtypes.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp",
				"/home/jiahao/nfs/S40network",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/arec_mediadetect.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/arec_mediadetect.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mediadetect/arec_mediadetect_wrapper.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/Sample/sample.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/arec_mp4recover.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/Sample/sample.cpp",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.c",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.h",
				"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmp.cpp",
				"//home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mpegtsmux/utils/arec_cond.h",
				"/home/jiahao/Git/curl/src/tool_setopt.c",
				"/home/jiahao/Git/curl/src/tool_setopt.h",
				"/home/jiahao/Git/curl/src/tool_operate.c"
			],
			"find":
			{
				"height": 40.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/home/jiahao/Git/arec_ct/media_engine",
					"",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib",
					"/home/jiahao/Git/arec_ct/media_engine",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine",
					"",
					"<open files>",
					"",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader",
					"/home/jiahao/Git/arec_ct/media_engine/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_curl",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/arec_uploader/sqlite_handler",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/sqlite_handle",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app",
					"/home/jiahao/Git/arec_ct/media_engine/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app/",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/",
					"/home/jiahao/Git/arec_ct/media_engine/arec_mp4recver",
					"/home/jiahao/Git/arec_ct/media_engine/sw_app",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/arec_mp4recover/arec_mp4recover.h",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_lib/",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/Release.sh",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux/",
					"/home/jiahao/Git/arec_ct/arec_mp4mux",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/base",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_pulse",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/",
					"/home/jiahao/Git/arec_ct/media_plugin",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/gstrtmpsink.c",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_adder/gstadder.cpp",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtspserver/",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Templates/cbox_os/arec_fs/arec/2014_08_15_15_35_28/minicom.cap",
					"/home/jiahao/Git/arec_ct/",
					"/home/jiahao/Git/msr13/libsrc/mediaengine/plugins/CUdpToFile/test00000_00.txt",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/",
					"/home/jiahao/Lib/gstreamer/gst-plugins-good-1.2.0/gst/isomp4/",
					"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp",
					"/home/jiahao/Git/arec_ct",
					"/home/jiahao/Git/msr13/",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"h264_format",
					"INPUT_AVC",
					"fragment_sequence",
					"gst_qt_mux_pad_fragment_add_buffer",
					"fragment_duration",
					"gst_qt_mux_pad_fragment_add_buffer",
					"fragment_duration",
					"qtmux->fragment_duration",
					"PROP_FRAGMENT_DURATION",
					"fragment-duration",
					"stsd",
					"atom_stsd_remove_entries",
					"gst_qt_mux_video_sink_set_caps",
					"qtpad->h264_format",
					"atom_trak_set_video_type\natom_trak_set_video_type",
					"atom_trak_set_video_type",
					"atom_trak_add_video_entry",
					"atom_trak_add_audio_entry",
					"atom_trak_add_video_entry",
					"stsd",
					"stdb",
					"fragment_duration",
					"stsd",
					"qtmux->fragment_duration",
					"PROP_FRAGMENT_DURATION",
					"PROP_FRAGMENT_DURATIONZ",
					"PROP_FRAGMENT_DURATION",
					"fragment",
					"DBG_SENGINE",
					"DEBUG_SENGINE",
					"dd",
					"m_is_live_record_mode",
					"m_drop_audio_outside",
					"InsertAudioData",
					"eSE_Run_TransTailStart",
					"m_drop_audio_outside",
					"SetEnableAllInput",
					"SetEnableAllInput, is_enable",
					"push audio",
					"push video data",
					"m_drop_audio_outside",
					"eSE_Run_TransHeadStart",
					"m_drop_audio_outside",
					"HandleAudioData",
					"m_drop_audio",
					"SetEnableAllInput",
					"m_drop_audio",
					"mp_audio_push_ptr",
					"HandleAudioDataSub",
					"-35",
					"RecordOffsetStartTime",
					"jiahao",
					"MP4_",
					"mp_cond_src_run",
					"is_clean",
					"CreateDemuxGraph",
					"InsertVideoDataFromDemux",
					"mp_video_push_ptr",
					"mp_video_queue",
					"video_sink",
					"InsertVideoDataFromDemux",
					"video_sink",
					"p_demuxer",
					"CreateDemuxGraph",
					"MP4_STREAMING_RELEASE",
					"=",
					"AddDbusReceiveListen",
					"ListenMethodCallAndReceiveSignal",
					"m_pDbusHandler",
					"m_methodCallBack",
					"pData",
					"listenMethodCall",
					"pData",
					"ListenMethodCallAndReceiveSignal",
					"AddDbusReceiveListen",
					"RunHandleTaskMgr",
					"adder->new_segment_pending",
					"adder->first_mix",
					"adder->pre_mix_num",
					"adder->empty_sample_count",
					"adder->is_empty_pad",
					"REALLY_EMPTY",
					"pad_status",
					"REALLY_EMPTY",
					"handle_mux_thread",
					"qtmux->moov",
					"moov",
					"record_status=",
					"msg from streamengine",
					"msg from streamengine = streamengine",
					"buffer_timeout",
					"on_message_async_done",
					"buffer_timeout",
					"target_state",
					"mp4mux",
					"dd()",
					"sleep",
					"m_elementMap",
					"pipeline",
					"sink->usleep_time",
					"PROP_SPEED_LEVEL",
					"qtmux->record_time",
					"m_segment",
					"SetSegmentTime",
					"segment_start",
					"start_time",
					"buf->pts",
					"dd()",
					"m_stop_live_record",
					"mp_cond_src_stop",
					"m_is_userabort",
					"mp_cond_src_stop",
					"m_is_errorabort",
					"m_is_userabort",
					"gst_element_set_state",
					"Stop",
					"m_stop_live_record",
					"mp_cond_src_stop",
					"p_sengine->mp_cond_src_stop",
					"p_sengine->mp_cond_src_finish->signal()",
					"p_sengine->mp_cond_src_finish",
					"m_is_errorabort",
					"pthread_create",
					"mp_cond_src_run",
					"handle_event_thread",
					"Wait mux thread",
					"handle_event_thread",
					"m_cb_info"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"INFO_UPLOADER",
					"INFO_CURL",
					"uploader_util.h",
					".",
					""
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/jiahao/Git/gst-plugins-good"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/jiahao/Git/gst-plugins-good/gst/isomp4/gstqtmux.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 119993,
								"regions":
								{
								},
								"selection":
								[
									[
										105430,
										105430
									]
								],
								"settings":
								{
									"BracketHighlighterBusy": false,
									"bh_regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										223,
										3,
										11,
										10,
										22,
										0,
										0,
										0,
										0,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C++.tmLanguage",
									"syntax_mgr_loaded": true,
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 71306.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 30.0
			},
			"input":
			{
				"height": 38.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.astyle_error_message":
			{
				"height": 0.0
			},
			"output.clang":
			{
				"height": 384.0
			},
			"output.exec":
			{
				"height": 144.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,73,24,1920,1052,1920,1080",
			"project": "",
			"replace":
			{
				"height": 56.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"gstqtmux",
						"gst/isomp4/gstqtmux.c"
					],
					[
						"gstqtmux.cpp",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"qtmux",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"arec_strea",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_stream",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_uploader",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_mp4",
						"media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp"
					],
					[
						"gstadder",
						"media_engine/sw_plugin/arec_adder/gstadder.cpp"
					],
					[
						"arecqtmux",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"mp4state",
						"media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp"
					],
					[
						"arec_dbus",
						"media_engine/sw_lib/arec_dbushandler/arec_dbusHandler.cpp"
					],
					[
						"arec_streamig",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_qtmux",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"mpegtsmux.cpp",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstmpetsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"curlbasesink",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"arec_upload",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"cmediaexportergstbase",
						"media_engine/sw_app/arec_uploader/media_engine/plugins/arec_mediaExporterGstBase.cpp"
					],
					[
						"ftpupload",
						"media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.cpp"
					],
					[
						"curlbase",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"arec_task",
						"media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp"
					],
					[
						"arec_streamengine.cpp",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"core/mak",
						"media_engine/sw_plugin/arec_coreelements/Makefile"
					],
					[
						"arec_stream/make",
						"media_engine/sw_lib/arec_streamengine/Makefile.lib.mk"
					],
					[
						"arec_stream/",
						"testbed/arec_streamengine_testbed/Makefile"
					],
					[
						"gstmpegtsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"aacparse",
						"media_engine/sw_plugin/arec_audioparsers/gstaacparse.c"
					],
					[
						"gstelement",
						"media_engine/sw_plugin/base/gst/gstelement.h"
					],
					[
						"arec_streaming",
						"testbed/arec_streamengine_testbed/IArecStreamEngine.h"
					],
					[
						"gstbasesink",
						"media_engine/sw_plugin/base/gstbasesink.c"
					],
					[
						"gstcurlbasesink.c",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstcurlbase",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"mpegtmsux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstaacpa",
						"media_engine/sw_plugin/arec_audioparsers/gstaacparse.c"
					],
					[
						"gstbasesink.c",
						"media_engine/sw_plugin/base/gstbasesink.c"
					],
					[
						"gstbsesink",
						"media_engine/sw_plugin/base/gstbasesink.c"
					],
					[
						"gstcurlbasesink",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"makefile.lib.mk",
						"media_engine/sw_lib/arec_mediadetect/Makefile.lib.mk"
					],
					[
						"gstrtspsrc",
						"media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"rtpjitter",
						"media_engine/sw_plugin/arec_rtpmanager/rtpjitterbuffer.c"
					],
					[
						"gstmultifilesink",
						"media_engine/sw_plugin/arec_multifile/gstmultifilesink.c"
					],
					[
						"gstfilesink",
						"media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp"
					],
					[
						"gstrtpjitter",
						"media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"gstcurlsshsink.c",
						"media_engine/sw_plugin/arec_curl/gstcurlsshsink.c"
					],
					[
						"gstcurlssh",
						"media_engine/sw_plugin/arec_curl/gstcurlsshsink.c"
					],
					[
						"gstcurlsftp",
						"media_engine/sw_plugin/arec_curl/gstcurlsftpsink.c"
					],
					[
						"ftp",
						"media_engine/sw_app/arec_uploader/media_engine/plugins/ftp_upload/ftp_upload.cpp"
					],
					[
						"gstcurlbasesin",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstflvmux",
						"media_engine/sw_plugin/arec_flv/gstflvmux.cpp"
					],
					[
						"mpegtsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstelement.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstelements.cpp"
					],
					[
						"gstrtmpsink",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"arec_streamengine.h",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.h"
					],
					[
						"filesink",
						"media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp"
					],
					[
						"arec_streamengine",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.h"
					],
					[
						"gstrtspconnection",
						"cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/rtsp/gstrtspconnection.h"
					],
					[
						"gstrtsp",
						"media_engine/sw_plugin/arec_rtsp/gstrtsp.c"
					],
					[
						"a_interf",
						"media_engine/sw_app/arec_uploader/dll_mgr/arec_interface.h"
					],
					[
						"gstcurlbas",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstfakesrc",
						"media_engine/sw_plugin/arec_coreelements/gstfakesrc.cpp"
					],
					[
						"gstfakesink",
						"media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp"
					],
					[
						"arec_mp4recover_wrapper",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp"
					],
					[
						"arec_mp4recover",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp"
					],
					[
						"media",
						"media_engine/sw_lib/arec_mediadetect/arec_mediadetect.cpp"
					],
					[
						"arec_mp4recover.c",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover.cpp"
					],
					[
						"arec_mp4rec",
						"media_engine/sw_lib/arec_mp4recover/arec_mp4recover_wrapper.cpp"
					],
					[
						"arec_mediad",
						"media_engine/sw_lib/arec_mediadetect/arec_mediadetect_wrapper.cpp"
					],
					[
						"arec_mediadetect",
						"media_engine/sw_lib/arec_mediadetect/arec_mediadetect.cpp"
					],
					[
						"rtmp.c",
						"media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.c"
					],
					[
						"",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"gstcurl",
						"media_engine/sw_plugin/arec_curl/gstcurlbasesink.c"
					],
					[
						"gstfilesink.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstfilesink.cpp"
					],
					[
						"tool_setopt.c",
						"~/Git/curl/src/tool_setopt.c"
					],
					[
						"tool_operate.c",
						"~/Git/curl/src/tool_operate.c"
					],
					[
						"curlssh",
						"media_engine/sw_plugin/arec_curl/gstcurlsshsink.c"
					],
					[
						"gstcurlsft",
						"media_engine/sw_plugin/arec_curl/gstcurlsftpsink.c"
					],
					[
						"arec_strm",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"gstjitterbuf",
						"media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"gstrtspsrc.c",
						"media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"gstqtmx",
						"media_engine/sw_plugin/arec_mp4mux/gstqtmux.cpp"
					],
					[
						"gstrtmpsin",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"gstrtpbasedepayload",
						"cbox_sdk/linux_devkit/usr/include/gstreamer-1.0/gst/rtp/gstrtpbasedepayload.h"
					],
					[
						"gstrtph264depay.cpp",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"gsth264de",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"gstrtph264de",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"gstrtmpsink.cpp",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"gstmpegtmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"rtmp.cpp",
						"media_engine/sw_plugin/arec_rtmp/gstrtmp.cpp"
					],
					[
						"gstrtmp",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsink.cpp"
					],
					[
						"mp4sta",
						"media_engine/sw_plugin/arec_mp4mux/arec_mp4statushandler.cpp"
					],
					[
						"arec_string",
						"testbed/arec_streamengine_testbed/IArecStreamEngine.h"
					],
					[
						"gsth264dep",
						"media_engine/sw_plugin/arec_rtp/gstrtph264depay.cpp"
					],
					[
						"carecstreamengine",
						"testbed/arec_streamengine_testbed/ArecStreamEngineData.h"
					],
					[
						"flvmux",
						"media_engine/sw_plugin/arec_flv/gstflvmux.cpp"
					],
					[
						"arec_strem",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"arec_uplo",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_uploadertask",
						"media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp"
					],
					[
						"arec_u",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_dbhan",
						"media_engine/sw_app/arec_uploader/sqlite_handler/arec_dbHandler.cpp"
					],
					[
						"arec_uplodatas",
						"media_engine/sw_app/arec_uploader/task_mgr/tasks/uploader_ftpUploadTask.cpp"
					],
					[
						"arec_uploader.cpp",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"fakesink",
						"media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp"
					],
					[
						"mw_action.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstinputselector.cpp"
					],
					[
						"librtmp.c",
						"media_engine/sw_plugin/arec_rtmp/librtmp/rtmp.c"
					],
					[
						"rtspsrc",
						"media_engine/sw_plugin/arec_rtsp/gstrtspsrc.c"
					],
					[
						"getprogress",
						"cbox_sdk/linux_devkit/usr/include/elementary-1/elm_widget_progressbar.h"
					],
					[
						"gstmpegtmsu",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"rtmpsrc",
						"media_engine/sw_plugin/arec_rtmp/gstrtmpsrc.cpp"
					],
					[
						"gstmpegtmsux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"gstfakesrc.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstfakesrc.cpp"
					],
					[
						"arec_uplaoder",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"gstfakesink.cpp",
						"media_engine/sw_plugin/arec_coreelements/gstfakesink.cpp"
					],
					[
						"arec_mpegtsmux",
						"media_engine/sw_plugin/arec_mpegtsmux/mpegtsmux.cpp"
					],
					[
						"arec_streamgin",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"gstrtspserver",
						"media_engine/sw_plugin/arec_rtspserver/rtsp-server.c"
					],
					[
						"gstjitter",
						"media_engine/sw_plugin/arec_rtpmanager/gstrtpjitterbuffer.c"
					],
					[
						"arec_uplaod",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"streamen",
						"testbed/arec_streamengine_testbed/ArecStreamEngineData.h"
					],
					[
						"streamdata",
						"testbed/arec_streamengine_testbed/ArecStreamEngineData.h"
					],
					[
						"steramengine_test",
						"testbed/arec_streamengine_testbed/arec_streamengine_testbed.cpp"
					],
					[
						"iarecstreamengine.h",
						"testbed/arec_streamengine_testbed/IArecStreamEngine.h"
					],
					[
						"arec_tsdmux",
						"media_engine/sw_plugin/arec_mpegtsdemux/tsdemux.cpp"
					],
					[
						"arec_uploade",
						"media_engine/sw_app/arec_uploader/arec_uploader.cpp"
					],
					[
						"arec_media_",
						"testbed/arec_mediadetect_testbed/arec_mediadetect_testbed.cpp"
					],
					[
						"arec_mediadetect_testbed.cpp",
						"testbed/arec_mediadetect_testbed/arec_mediadetect_testbed.cpp"
					],
					[
						"arec",
						"media_engine/sw_lib/arec_streamengine/arec_streamengine.cpp"
					],
					[
						"stream/",
						"media_engine/sw_lib/arec_streamengine/Makefile"
					],
					[
						"streamengin/make",
						"media_engine/sw_lib/arec_streamengine/Makefile"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"arec",
						"~/Git/arec_ct/arec_ct.sublime-project"
					],
					[
						"gstrea",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"gui",
						"~/Git/msrgui/msrgui.sublime-project"
					],
					[
						"gstream",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msr13",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"rtsp",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"rts",
						"~/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-project"
					],
					[
						"",
						"~/Lib/gstreamer/gstreamer-1.2.0.sublime-project"
					],
					[
						"msrgst",
						"~/Git/msrgst/msrgst.sublime-project"
					],
					[
						"m3",
						"~/Git/msr13/msr13.sublime-project"
					],
					[
						"gst",
						"~/Git/msrgst/msrgst.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 530.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 275.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 453,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/home/jiahao/Git/msr13/msr13.sublime-workspace",
			"/home/jiahao/Git/msrgst/msrgst.sublime-workspace",
			"/home/jiahao/Git/cbox_mediastack/cbox_mediastack.sublime-workspace",
			"/home/jiahao/Git/arec_ct/arec_ct.sublime-workspace",
			"/home/jiahao/Git/msrgui/msrgui.sublime-workspace",
			"/home/jiahao/Lib/gstreamer-1.4.0/gstreamer-1.4.3.sublime-workspace",
			"/home/jiahao/Dropbox/CTCI/CTCI.sublime-workspace",
			"/home/jiahao/Git/curl/curl.sublime-workspace",
			"/home/jiahao/Git/gst-plugins-good/gst-plugins-good.sublime-workspace",
			"/home/jiahao/Lib/gstreamer/gstreamer-1.2.0.sublime-workspace",
			"/home/jiahao/Downloads/linux sdk/linux-sdk-demo/demo.sublime-workspace",
			"/home/jiahao/Dropbox/Case/WimeConnect_v1_2_0/WimeConnect.sublime-workspace",
			"/home/jiahao/Dropbox/Case/ZeClock/iOSPlot-master/iosPlot.sublime-workspace",
			"/home/jiahao/Git/rtsp_rtp_server/rtsp_rtp_server.sublime-workspace",
			"/home/jiahao/Git/gst-rtsp-server/gst/rtsp-server/gst-rtsp-server.sublime-workspace",
			"/home/jiahao/Git/arec_ct/media_engine/sw_plugin/arec_rtmp/arec_ct.sublime-workspace",
			"/home/jiahao/Lib/nginx-rtmp-module-master/nginx-rtmp-module.sublime-workspace"
		]
	}
}
